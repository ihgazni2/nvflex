{"version":3,"sources":["webpack://NVFLEXJS/webpack/universalModuleDefinition","webpack://NVFLEXJS/webpack/bootstrap","webpack://NVFLEXJS/./util.js","webpack://NVFLEXJS/./node_modules/ndtreejs/cmmn.js","webpack://NVFLEXJS/./node_modules/ndtreejs/ndfunc.js","webpack://NVFLEXJS/./node_modules/color-convert/conversions.js","webpack://NVFLEXJS/./node_modules/ndtreejs/util.js","webpack://NVFLEXJS/./index.js","webpack://NVFLEXJS/./node_modules/color-convert/index.js","webpack://NVFLEXJS/./node_modules/color-name/index.js","webpack://NVFLEXJS/./node_modules/color-convert/route.js","webpack://NVFLEXJS/./cellfunc.js","webpack://NVFLEXJS/./whtml.js","webpack://NVFLEXJS/./zonefunc.js","webpack://NVFLEXJS/./node_modules/ndtreejs/index.js","webpack://NVFLEXJS/./node_modules/ndtreejs/ndcls.js","webpack://NVFLEXJS/./node_modules/ndtreejs/event-target.js","webpack://NVFLEXJS/./node_modules/ndtreejs/ndfuncterm.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fs","dcp","JSON","parse","stringify","kvlist2d","kl","vl","length","rfile","fn","readFileSync","toString","wfile","writeFileSync","rjson","wjson","js","dict_length","entries","gen_guid","replace","Math","random","range","si","ei","Array","from","map","v","seqs_slct","seqs","arr","filter","includes","is_empty_dict","dict_values","dict_keys","dict_map","f","k","dict_foreach","dict_plus","d0","d1","dict_update","dtb_kv_rm","dtb","dtb_kv_get_seq","findIndex","mat_map","map_func","lyr","j","cmmn","calc_next_id","nodes","ids","max","is_id","update_one_nodeid","nd","idplus","_id","_tree","_fstch","_lsib","_rsib","_parent","update_nodes_ids","nodes0","nodes1","next_id","id","nnd","is_inited","undefined","is_root","cond0","cond1","is_fstch","is_lstch","is_leaf","is_lonely","get_children","get_parent","is_connectable","prepend_child","child","console","log","cond","old_fstch","append_child","old_lstch","get_lstch","add_rsib","rsib","add_lsib","lsib","parent","get_lsib","insert_child","which","children","lngth","update_treeid","cnodes","update_disconnected_nodes","nsdfs","get_sdfs","treeid","forEach","update_orig_nodes","nnodes","leafize","rootize","disconnect","get_rsib","get_fstch","push","get_which_child","get_some_children","whiches","some","get_lstsib","including_self","lstrsib","get_sibs","sibs","seq","get_depth","get_ances","get_height","depth","des_depths","get_lyr","sdfs","get_root","get_breadth","lst_parent","ances","unshift","get_rsib_of_fst_ance_having_rsib","get_sdfs_next","fstch","get_drmost_des","lstch","nd_depth","get_dlmost_des","get_edfs_next","get_lsib_of_fst_ance_having_lsib","get_edfs","edfs","nxt","clear_$visited","_$visited","get_sedfs_next","visited","is_sedfs_traverse_finished","start_id","get_sedfs","deepcopy","clear","sedfs","_nd2unhandled_ele","ele","_children","sdfs2mat","unhandled","_pbreadth","next_unhandled","_breadth","_depth","index","concat","sdfs2edfs","sdfs2sedfs","edfs2sdfs","sedfs2sdfs","get_deses","deses","splice","get_root_via_tree","tree","creat_root","creat_nd","get_fstsib","get_preceding_sibs","get_following_sibs","get_which_sib","get_some_sibs","get_sibseq","get_count","get_fst_lyr_des_depth","get_lst_lyr_des_depth","get_which_lyr_des_depth","get_which_ance","get_some_ances","get_sdfs_prev","get_edfs_prev","get_sedfs_prev","get_fst_lyr_deses","get_lst_lyr_deses","get_which_lyr_deses","get_some_deses","get_which_deses","nd2ele","edfs2mat","edfs2sedfs","sedfs2mat","sedfs2edfs","rm_fstch","rm_lstch","rm_which","rm_some","whices","rm_all","prepend_child_tree","append_child_tree","add_rsib_tree","add_lsib_tree","insert_child_tree","tree2sdfs","cssKeywords","reverseKeywords","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","Error","g","b","min","delta","h","rdif","gdif","bdif","diff","diffc","w","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","y","x","z","t2","t3","val","t1","smin","lmin","hi","floor","q","vmin","sl","wh","bl","ratio","y2","x2","z2","a","atan2","PI","sqrt","hr","cos","sin","args","saturation","round","ansi","color","mult","rem","string","toUpperCase","substring","match","colorString","split","char","join","integer","parseInt","chroma","grayscale","hue","pure","mg","is_int_str","get_clrd","playout","sedfs2html","zones2znds","znds2tree","get_dflt_cfg","zones","cmat","clrd","nclrd","cfg","tag","style","height","width","attrib","text","s2html","znds","$sdfs","$is_leaf","$append_child","zone","rune","type","append_leafs","$sedfs","html","conversions","route","fromModel","routes","toModel","wrappedFn","arg0","result","len","conversion","wrapRounded","raw","wrapRaw","deriveBFS","graph","models","buildGraph","queue","current","pop","adjacents","adjacent","node","link","to","wrapConversion","path","cur","s2cmat_bmap","lines","trim","line","bmap","row","col","cmat2carr","carr","reverse","get_submat_via_tlbr_from_cmat","tl","br","rs","cs","re","ce","submat","slice","get_subcarr_via_tlbr_from_cmat","get_cmat_rn","get_cmat_cn","is_continuous","subcarr","cell","is_all_having_same_rune","every","is_zone","is_tl_of","c0","c1","creat_zone","nullize_bmap","zonearr","iter_next","ansi256_color_control","fg","bg","runes","Set","clrs","charCodeAt","creat_cell","get_cmat_rncn","is_cell_in_cmat","rn","cn","is_br_of","_playout","is_stag","$open_at","creat_root_flex","indent","repeat","$depth","flex","calc_flex","hw","$parent","calc_hw","creat_css","css","creat_attrib","style_indent","creat_stag","creat_etag","is_etag","$close_at","ndcls","get_ledge","sx","sy","ex","ey","get_redge","get_tedge","get_bedge","is_ladj_of","z0","z1","redge","ledge","rlngth","cond2","is_radj_of","is_tadj_of","bedge","tedge","is_badj_of","sort_znds_tl2br","sort","sort_znds_lt2rb","rppend","znd0","znd1","pznd","Tree","bppend","iter_next_l2r","handled","znd","other","iter_next_t2b","agg_l2r","agg_t2b","edge_eq","e0","e1","cond3","sort_znds_l2r","sort_znds_t2b","lppend","tppend","l2r_agg","$clone","t2b_agg","show_znd_tree","ndfunc","ndfuncterm","ndutil","EventTarget","STRUCT_KEYS","_is_inited","_is_root","_is_connectable","_lstch","oldch","_which_child","_some_children","_lstsib","oldrsib","_fstsib","fstsib","_psibs","psibs","sib","_fsibs","fsibs","_sibs","me","_sibseq","_ances","ance","_deses","drmost","_drmost_des","_sdfs","indexOf","_prepend_child","_append_child","$lstch","_add_rsib","$is_root","$is_lstch","_insert_child","$sdfs_next","_sedfs_next","$visited","$rsib","$fstch","_is_sedfs_traverse_finished","startnd","_sedfs","_clear_visited","st","has","add","_rootize","_update_disconnected_nodes","_disconn","$is_lonely","_leafize","$is_fstch","$lsib","_nd","_Node","super","$guid","$sibs","indexes","old","_load","_dump","dup","ch","$rsib_of_fst_ance_having_rsib","$drmost_des","$dlmost_des","$lsib_of_fst_ance_having_lsib","$edfs_next","$root","$edfs","dlmost","offset","$deses","rel_depths","abs_depths","$lyr","luncle","$luncle","runcle","$runcle","_set_id","ndict","$children","_get_ancend_via_id","fill_other_attrs_for_load","other_ks","get_non_struct_keys","rt","_guid","_rtjson2rt","prnd","prnj","nj","$prepend_child","$add_rsib","_dictize_nd_property","nodes_dict","fill_other_attrs_for_dump","$ances","ndindex","this_index","indexof","$sibseq","load","Node","Root","clone","$dump","struct_eq","tree0","tree1","m0","$sdfs2mat","m1","flat0","flat1","ele0","ele1","callback","options","event","dflt_sdfs_show_connd","dflt_edfs_show_connd","dflt_calc_conn_map_func","conn","rslt","conns2repr","conns","show_connd","clear_ui","_ui","dflt_sdfs_calc_conns","display","get_sdfs_repr_arr","conns_array","dflt_sdfs_show_callback","dflt_edfs_show_callback","dflt_edfs_calc_conns","get_edfs_repr_arr","dflt_sedfs_show_connd","stag_prefix","stag_suffix","etag_prefix","etag_suffix","gen_tag","prefix","suffix","sdfs_show_all","repr","sdfs_show_root_tree","sdfs_show_from","sdfs_show_to","sdfs_show_from_to","sdfs_expand","sdfs_foldup","edfs_show_all","edfs_show_root_tree","edfs_show_from","edfs_show_to","edfs_show_from_to","sedfs_show_all","depths","indents"],"mappings":"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","file":"nvflex.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NVFLEXJS\"] = factory();\n\telse\n\t\troot[\"NVFLEXJS\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","const fs = require(\"fs\")\n\nfunction dcp(d) {\n    return(JSON.parse(JSON.stringify(d)))\n}\n\nfunction kvlist2d(kl,vl) {\n    let d = {}\n    for(let i=0;i<kl.length;i++) {\n        d[kl[i]] = vl[i]\n    }\n    return(d)\n}\n\nfunction rfile(fn) {\n    let buf = fs.readFileSync(fn)\n    let s = buf.toString()\n    return(s)\n}\n\nfunction wfile(fn,s) {\n    fs.writeFileSync(fn,s)\n}\n\nfunction rjson(fn) {\n    let buf = fs.readFileSync(fn)\n    let s = buf.toString()\n    let d = JSON.parse(s)\n    return(d)\n}\n\nfunction wjson(fn,js) {\n    let s =JSON.stringify(js)\n    fs.writeFileSync(fn,s)\n}\n\n\nmodule.exports = {\n    dcp,\n    kvlist2d,\n    rfile,\n    wfile,\n    rjson,\n    wjson,\n}\n","\nfunction gen_guid() {\n    return(\n        'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function(c) {\n                let r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8)\n                return(v.toString(16))\n            }\n         )\n    )\n}\n\n\n\nfunction range(si,ei) {\n    return(Array.from({ length: ei-si }).map((v, i) => i + si))\n}\n\nfunction seqs_slct(seqs,arr) {\n    return(arr.filter((r,i)=>(seqs.includes(i))))\n}\n\n\nfunction dict_length(d) {\n    return(Object.entries(d).length)\n}\n\nfunction is_empty_dict(d) {\n    return(Object.entries(d).length === 0)\n}\n\nfunction dict_values(d) {\n    let entries = Object.entries(d)\n    let values = entries.map(r=>r[1])\n    return(values)\n}\n\nfunction dict_keys(d) {\n    let entries = Object.entries(d)\n    let keys = entries.map(r=>r[0])\n    return(keys)\n}\n\nfunction dict_length(d) {\n    let entries = Object.entries(d)\n    return(entries.length)\n}\n\nfunction dict_foreach(d,f) {\n    for(let k in d) {\n        f(k,d[k])\n    }\n    return(d)\n}\n\nfunction dict_map(d,f) {\n    for(let k in d) {\n        d[k] = f(k,d[k])\n    }\n    return(d)\n}\n\nfunction dict_plus(d0,d1) {\n    //unique k ,no common k\n    for(let k in d1) {\n        d0[k] =d1[k]\n    }\n    return(d0)    \n}\n\nfunction dict_update(d0,d1) {\n    //unique k ,no common k\n    for(let k in d1) {\n        let cond = !(k in d0)\n        if(cond) {\n            d0[k] =d1[k]\n        }    \n    }\n    return(d0)\n}\n\n\n\nfunction dtb_kv_rm(k,v,dtb) {\n    dtb = dtb.filter(r=>(r[k]!==v))\n    return(dtb)\n}\n\nfunction dtb_kv_get_seq(k,v,dtb) {\n    let seq = dtb.findIndex(r=>r[k]===v)\n    return(seq)\n}\n\nfunction dcp(o) {\n    return(JSON.parse(JSON.stringify(o)))\n}\n\nfunction mat_map(m,map_func) {\n    for(let i=0;i<m.length;i++) {\n        lyr = m[i]\n        for(let j=0;j<lyr.length;j++) {\n            m[i][j] = map_func(m[i][j],i,j)\n        } \n    }\n    return(m)\n}\n\n\nmodule.exports = {\n    gen_guid:gen_guid,\n    range:range,\n    seqs_slct:seqs_slct,\n    dict_length:dict_length,\n    is_empty_dict:is_empty_dict,\n    dict_values:dict_values,\n    dict_keys:dict_keys,\n    dict_map:dict_map,\n    dict_foreach:dict_foreach,\n    dict_length:dict_length,\n    dict_plus,\n    dict_update,\n    dtb_kv_rm,\n    dtb_kv_get_seq,\n    dcp:dcp,\n    mat_map:mat_map,\n}\n","//\nconst cmmn = require(\"./cmmn.js\")\n\n//tree ndict nodes nnodes same\n\n//util\n\n\n\nfunction calc_next_id(nodes) {\n    if(cmmn.is_empty_dict(nodes)){\n        return(0)\n    } else {\n        let ids = cmmn.dict_keys(nodes)\n        return(Math.max(...ids)+1)\n    }\n}\n\nfunction is_id(n) {\n    let cond = ((n !== null) && (n !== undefined))\n    return(cond) \n}\n\nfunction update_one_nodeid(nd,idplus) {\n    nd._id = nd._id + idplus\n    nd._tree = nd._tree + idplus\n    if(is_id(nd._fstch)) {\n         nd._fstch = nd._fstch + idplus\n    }\n    if(is_id(nd._lsib)) {\n         nd._lsib = nd._lsib + idplus\n    }\n    if(is_id(nd._rsib)) {\n         nd._rsib = nd._rsib + idplus\n    }\n    if(is_id(nd._parent)) {\n         nd._parent = nd._parent + idplus    \n    } \n    return(nd)        \n}\n\n\nfunction update_nodes_ids(nodes0,nodes1) {\n    let next_id = calc_next_id(nodes0)\n    for(let id in nodes1) {\n        let nnd = update_one_nodeid(nodes1[id],next_id) \n        nodes1[nnd._id] = nnd\n        delete nodes1[id]\n    }\n    return(nodes1)\n}\n\n//\n\nfunction creat_root(n=0){\n    let _id = n\n    let root = {\n        _id:_id,\n        _fstch:null,\n        _lsib:null,\n        _rsib:null,\n        _parent:null,\n        _tree:_id  //属于哪个tree\n    }\n    return(root)\n}\n\n\nfunction creat_nd(nodes,n=0) {\n    /*\n        by_dflt  leaf_nd\n    */\n    let _id = calc_next_id(nodes)+n\n    let nd = {\n        _id:_id,\n        _fstch:null,\n        _lsib:undefined,\n        _rsib:undefined,\n        _parent:undefined,\n        _tree:undefined\n    }\n    return(nd)\n}\n\n\n//\n\nfunction is_inited(nd) {\n    //被添加到了树上\n    let cond = (nd._tree !== undefined)\n    return(cond)\n}\n\nfunction is_root(nd) {\n    //tree 是自己\n    let cond0 = (nd._tree!== undefined)\n    let cond1 = (nd._tree === nd._id)\n    return(cond0 && cond1)\n}\n\nfunction is_fstch(nd) {\n    //没有左兄弟\n    let cond = (nd._lsib === null)\n    return(cond)\n}\n\nfunction is_lstch(nd) {\n    //没有右兄弟\n    let cond = (nd._rsib === null)\n    return(cond)\n}\n\nfunction is_leaf(nd) {\n    //没有子\n    let cond = (nd._fstch === null)\n    return(cond)\n}\n\nfunction is_lonely(nd,nodes) {\n    let cond = is_root(nd)\n    if(cond) {\n        return(true)\n    } else {\n        let parent = get_parent(nd,nodes)\n        let children = get_children(parent,nodes)\n        return(children.length === 1)  \n    } \n}\n\nfunction is_connectable(nd) {\n    return(is_root(nd) || !is_inited(nd))\n}\n\n\n\n/*\nfunction eq(nd0,nd1) {\n    //id 必须完全一致\n    //只有同一颗树下自己等于自己\n    let cond0 = (nd0._id === nd1._id)\n    let cond1 = (nd0._tree === nd1._tree)\n    return(cond0 && cond1)\n}\n*/\n\n//\n\nfunction prepend_child(nd,child,nodes) {\n    if(is_connectable(child)) {} else { console.log('only root or uninited could be prepend');return(nd)}\n    //只有根节点才可以被链接到另一颗树上\n    let cond = is_leaf(nd)\n    child._tree = nd._tree\n    child._lsib = null\n    if(cond){\n        //child 也是lstch\n        child._rsib = null\n        child._parent = nd._id\n    } else {\n        //变更old_fstch\n        let old_fstch = nodes[nd._fstch]\n        //old_fstch 不再是fstch\n        old_fstch._lsib = undefined\n        //更新child\n        child._rsib = old_fstch._id\n        //\n        //child 不是lstch _parent 置为 未计算\n        child._parent = undefined\n        //不改动fstch\n    }\n    nd._fstch = child._id\n    nodes[child._id] = child\n    //返回当前节点\n    return(nd)\n}\n\n\nfunction append_child(nd,child,nodes) {\n    if(is_connectable(child)) {} else { console.log('only root or uninited could be append');return(nd)}\n    //\n    let cond = is_leaf(nd)\n    child._tree = nd._tree\n    child._rsib = null\n    if(cond){\n        //child 也是lstch\n        nd._fstch = child._id\n        child._lsib = null\n    } else {\n        //变更old_lstch\n        let old_lstch = get_lstch(nd,nodes)\n        //old_lstch 不再是lstch\n        old_lstch._parent = undefined\n        old_lstch._rsib = child._id\n        //child 不是fstch _lsib置为 undefined\n        child._lsib = undefined\n    }\n    child._parent = nd._id\n    nodes[child._id] = child\n    return(nd)\n}\n\nfunction add_rsib(nd,rsib,nodes) {\n    if(is_connectable(rsib)) {} else { console.log('only root or uninited could be add');return(nd)}\n    //root 不可操作\n    if(is_root(nd)) {\n        console.log(\"cant addrsib to root\")\n        return(nd)\n    }\n    //\n    let cond = is_lstch(nd)\n    rsib._tree = nd._tree\n    if(cond) {\n        rsib._parent = nd._parent\n        nd._parent = undefined\n        rsib._rsib = null\n    } else {\n        rsib._rsib = nd._rsib\n        rsib._parent = undefined\n    }\n    nd._rsib = rsib._id\n    //rsib 一定不是fstch\n    rsib._lsib = undefined\n    //\n    nodes[rsib._id] = rsib\n    return(nd)\n}\n\nfunction add_lsib(nd,lsib,nodes) {\n    //\n    if(is_connectable(lsib)) {} else { console.log('only root or uninited could be add');return(nd)}\n    //root 不可操作\n    if(is_root(nd)) {\n        console.log(\"cant addlsib to root\")\n        return(nd)\n    }\n    //\n    let cond = is_fstch(nd)\n    lsib._tree = nd._tree\n    if(cond) {\n        let parent = get_parent(nd,nodes)\n        nd._lsib = undefined\n        lsib._lsib = null\n        parent._fstch = lsib._id\n    } else {\n        let old_lsib = get_lsib(nd,nodes)\n        old_lsib._rsib = lsib._id\n        //\n        lsib._lsib = undefined\n    }\n    lsib._rsib = nd._id\n    //lsib 一定不是lstch\n    lsib._parent = undefined\n    //\n    nodes[lsib._id] = lsib\n    return(nd)\n}\n\nfunction insert_child(which,nd,child,nodes) {\n    let children = get_children(nd,nodes)\n    let lngth = children.length\n    if(lngth ===0) {\n        return(prepend_child(nd,child,nodes))\n    } else {\n        let cond = (which<=lngth) && (which >=0)\n        if(!cond) {\n            console.log(\"not in range!!\")\n            return(nd)\n        } else {\n            if(which === 0) {\n                return(prepend_child(nd,child,nodes))\n            } else if(which === lngth) {\n                return(append_child(nd,child,nodes))\n            } else {\n                let lnd = children[which-1]\n                return(add_rsib(lnd,child,nodes))\n            }\n        }\n    }\n}\n\n\nfunction update_treeid(nd,cnodes) {\n    for(let id in cnodes) {\n        cnodes[id]._tree = nd._tree\n    }\n}\n\n\n/*tree*/\n\nfunction prepend_child_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = prepend_child(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction append_child_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = append_child(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction add_rsib_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = add_rsib(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction add_lsib_tree(nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = add_lsib(nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\nfunction insert_child_tree(which,nd,nodes,cnodes) {\n    cnodes = update_nodes_ids(nodes,cnodes)\n    let k = cmmn.dict_keys(cnodes)[0]\n    let child = get_root(cnodes[k],cnodes)\n    nd = insert_child(which,nd,child,nodes) \n    update_treeid(nd,cnodes)\n    cmmn.dict_plus(nodes,cnodes)\n    return(nd)\n}\n\n\n/*tree*/\n\nfunction update_disconnected_nodes(nd,nodes) {\n    let nsdfs = get_sdfs(nd,nodes)\n    let treeid = nsdfs[0]._id\n    nsdfs.forEach(\n       nd=> {\n           nd._tree =treeid \n       }\n    ) \n    return(nsdfs)\n}\n\nfunction update_orig_nodes(nsdfs,nodes) {\n    let nnodes = {}\n    nsdfs.map(\n        nd => {\n            let id = nd._id\n            nnodes[id] = nd\n            delete nodes[id]\n        }\n    )\n    return(nnodes)  \n}\n\n\nfunction leafize(nd) {\n    nd._fstch = null\n    //nd._lsib = null\n    //nd._rsib = null\n    return(nd)\n}\n\nfunction rootize(nd) {\n    nd._lsib = null\n    nd._rsib = null\n    nd._parent = null\n    return(nd) \n}\n\n\nfunction disconnect(nd,nodes) {\n    let cond = is_root(nd)\n    if(cond) {\n        //do nothing\n        return([nd,nodes])\n    } else if(is_lonely(nd,nodes)) {\n        //\n        let parent =  nodes[nd._parent]\n        leafize(parent);\n        let nsdfs = update_disconnected_nodes(nd,nodes);\n        let nnodes = update_orig_nodes(nsdfs,nodes)\n        rootize(nd);\n        //\n        return([nd,nnodes])         \n    } else {\n        if(is_fstch(nd)) {\n            //节点变味新树的根节点\n            let rsib = get_rsib(nd,nodes)\n            //右兄弟变成了fstch, lsib 指向null\n            rsib._lsib = null\n            //右兄弟变成了fstch,parent要指向rsib\n            //rsib._parent = nd._parent fstch的parent不需要改变\n            // parent 的fstch 要指向rsib\n            let parent = get_parent(nd,nodes) \n            parent._fstch = nd._rsib  \n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes)\n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])             \n        } else if(is_lstch(nd)) {\n            //节点变味新树的根节点\n            let lsib = get_lsib(nd,nodes) \n            lsib._rsib = nd._rsib\n            //左兄弟变成了lstch,左邻居要指向parent\n            lsib._parent = nd._parent\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes) \n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])\n        } else {\n            //节点变味新树的根节点\n            let lsib = get_lsib(nd,nodes) \n            lsib._rsib = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = update_disconnected_nodes(nd,nodes)\n            //从原来的nodes删除分离出的子树的所有节点\n            let nnodes = update_orig_nodes(nsdfs,nodes)\n            //nd 变为分离出去的tree的root\n            rootize(nd);\n            //\n            return([nd,nnodes])\n        }\n    }   \n}\n\n//在父节点上操作\nfunction rm_fstch(nd,nodes) {\n    let fstch = get_fstch(nd,nodes)\n    if(fstch===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(fstch,nodes))\n    }\n}\n\nfunction rm_lstch(nd,nodes) {\n    let lstch = get_lstch(nd,nodes)\n    if(lstch===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(lstch,nodes))\n    }\n}\n\nfunction rm_which(index,nd,nodes) {\n    let child = get_which_child(index,nd,nodes)\n    if(child===null) {\n        return([nd,nodes])\n    } else {\n        return(disconnect(child,nodes))\n    }     \n}\n\nfunction rm_some(nd,nodes,...whices) {\n    let some = get_some_children(nd,nodes,...whiches) \n    for(let i=0;i<some.length;i++) {\n        disconnect(some[i],nodes)\n    }\n    return([nd,nodes])\n}\n\nfunction rm_all(nd,nodes) {\n    let children = get_children(nd,nodes)\n    for(let i=0;i<children.length;i++) {\n        disconnect(children[i],nodes)\n    }\n    return(nodes)\n}\n\n/**/\n\n//child\n\nfunction get_fstch(nd,nodes) {\n    let fstch = (nd._fstch===null)?null:nodes[nd._fstch]\n    return(fstch)\n}\n\n\nfunction get_children(nd,nodes){\n    let children = []\n    let child = get_fstch(nd,nodes)\n    while(child!==null){\n        children.push(child)\n        child = get_rsib(child,nodes)\n    }\n    return(children)\n}\n\nfunction get_lstch(nd,nodes) {\n    let children = get_children(nd,nodes)\n    if(children.length ===0){\n        return(null)\n    } else {\n        return(children[children.length-1])\n    }\n}\n\nfunction get_which_child(which,nd,nodes) {\n    let children = get_children(nd,nodes)\n    if(children.length ===0){\n        return(null)\n    } else {\n        let cond = (which>children.length-1) || (which <0)\n        if(cond){\n            return(null)\n        } else {\n            return(children[which])\n        }\n    }\n}\n\nfunction get_some_children(nd,nodes,...whiches) {\n    let children = get_children(nd,nodes)\n    let some = []\n    if(children.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>children.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(children[which])\n            }\n        }\n    }\n    return(some)\n}\n\n\n////sibs\nfunction get_lstsib(nd,nodes,including_self=false) {\n    let lstrsib = nd\n    let rsib = get_rsib(nd,nodes)\n    while(rsib!==null) {\n        lstrsib = rsib\n        rsib = get_rsib(rsib,nodes)\n    }\n    if(including_self){\n        return(lstrsib)\n    } else {\n        if(lstrsib._id !== nd._id) {\n            return(lstrsib)\n        } else {\n            return(null)\n        }\n    }\n}\n\n\nfunction get_preceding_sibs(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<sibs.length;i++) {\n            let cond = i<seq\n            if(cond) {\n                some.push(sibs[i])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_following_sibs(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<sibs.length;i++) {\n            let cond = i>seq\n            if(cond) {\n                some.push(sibs[i])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_sibs(nd,nodes,including_self=false) {\n    let parent = get_parent(nd,nodes)\n    let sibs;\n    if(parent !== null) { \n        sibs = get_children(parent,nodes)\n    } else {\n        sibs =[nd]\n    }\n    if(including_self) {\n        return(sibs)\n    } else {\n        sibs = cmmn.dtb_kv_rm('_id',nd._id,sibs)\n    }\n    return(sibs)\n}\n\nfunction get_fstsib(nd,nodes,including_self=false) {\n    let sibs = get_sibs(nd,nodes,true)\n    if(including_self) {\n        return(sibs[0])\n    } else {\n        if(sibs[0]._id === nd._id) {\n            return(null)\n        } else {\n            return(sibs[0])\n        }\n    }\n}\n\n\nfunction get_which_sib(which,nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let lngth = sibs.length\n    let cond = (which<=lngth-1) && (which >=0)\n    if(cond) {\n        return(sibs[which])\n    } else {\n        return(null)\n    }\n}\n\nfunction get_some_sibs(nd,nodes,...whiches) {\n    let sibs = get_sibs(nd,nodes,true)\n    let some = []\n    if(sibs.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>sibs.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(sibs[which])\n            }\n        }\n    }\n    return(some)\n}\n\nfunction get_sibseq(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    return(seq)\n}\n\nfunction get_lsib(nd,nodes) {\n    let sibs = get_sibs(nd,nodes,true)\n    let seq = cmmn.dtb_kv_get_seq(\"_id\",nd._id,sibs)\n    if(seq === 0) {\n        return(null)\n    } else {\n        return(sibs[seq-1])\n    }\n}\n\nfunction get_rsib(nd,nodes) {\n    let rsib = (nd._rsib===null)?null:nodes[nd._rsib]\n    return(rsib)\n}\n\n//layer\n\nfunction get_depth(nd,nodes) {\n    let ances = get_ances(nd,nodes,true)\n    return(ances.length-1)\n}\n\nfunction get_height(nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let sdfs = get_sdfs(nd,nodes)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    let max = Math.max(...des_depths)\n    return(max-depth+1)\n}\n\nfunction get_fst_lyr_des_depth(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        return(null)\n    } else {\n        let depth = get_depth(nd,nodes)\n        return(depth+1)\n    }\n}\n\nfunction get_lst_lyr_des_depth(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        return(null)\n    } else {\n        let depth = get_depth(nd,nodes)\n        let sdfs = get_sdfs(nd,nodes)\n        let des_depths = sdfs.map(r=>get_depth(r,nodes))\n        let max = Math.max(...des_depths)\n        return(max)\n    }\n}\n\nfunction get_which_lyr_des_depth(which,nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let height = get_height(nd,nodes)\n    if(height<=which){\n        return(null)\n    } else {\n        return(depth+which)\n    }\n}\n\n\nfunction get_lyr(nd,nodes) {\n    let root = get_root(nd,nodes)\n    let sdfs = get_sdfs(root,nodes)\n    let depth = get_depth(nd,nodes)\n    let lyr = sdfs.filter(nd=>(get_depth(nd,nodes) === depth))\n    return(lyr) \n}\n\nfunction get_breadth(nd,nodes) {\n    let lyr = get_lyr(nd,nodes)\n    let breadth = cmmn.dtb_kv_get_seq('_id',nd._id,lyr)\n    return(breadth)\n}\n\n\nfunction get_count(nd,nodes) {\n    let sdfs = get_sdfs(nd,nodes)\n    return(sdfs.length)\n}\n\n//ance\nfunction get_root(nd,nodes) {\n    /*\n        get_root(root,nodes)\n        get_root(child,nodes)\n    */\n    let lst_parent = nd\n    let parent = get_parent(nd,nodes)  \n    while(parent !== null) {\n        lst_parent = parent\n        parent = get_parent(parent,nodes)\n    }\n    return(lst_parent)\n}\n\nfunction get_parent(nd,nodes) {\n    let parent;\n    if(is_root(nd)) {\n        parent = null\n    } else {\n        let lstrsib = get_lstsib(nd,nodes,true)\n        parent = nodes[lstrsib._parent]\n    }\n    return(parent)\n}\n\nfunction get_ances(nd,nodes,including_self=false) {\n    let ances = []\n    let parent = get_parent(nd,nodes)  \n    while(parent !== null) {\n        ances.push(parent)\n        parent = get_parent(parent,nodes)\n    }\n    if(including_self){\n        ances.unshift(nd)\n    } else {\n        \n    }\n    return(ances)\n}\n\nfunction get_which_ance(which,nd,nodes) {\n    let ances = get_ances(nd,nodes,true)\n    let lngth = ances.length\n    let cond = (which<lngth) && (which>=0)\n    if(cond) {\n        return(ances[which])\n    } else {\n        return(null)\n    }\n}\n\nfunction get_some_ances(nd,nodes,...whiches) {\n    let ances = get_ances(nd,nodes,true)\n    let some = []\n    if(ances.length ===0) {\n        \n    } else {\n        for(let i=0;i<whiches.length;i++) {\n            let which = whiches[i]\n            let cond = (which>ances.length-1) || (which <0)\n            if(cond) {\n                \n            } else {\n                some.push(ances[which])\n            }\n        }\n    }\n    return(some)\n}\n\n\n\n//sdfs  depth-first  record-when-open-tag\n\nfunction get_rsib_of_fst_ance_having_rsib(nd,nodes) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have rsib,return the rsib-of-parent\n        ---------\n    */\n    let parent = get_parent(nd,nodes)\n    while(parent!==null) {\n        let rsib = get_rsib(parent,nodes)\n        if(rsib!==null) {\n            return(rsib)\n        } else {\n            parent = get_parent(parent,nodes)\n        }\n    }\n    return(null)\n}\n\n\nfunction get_sdfs_next(nd,nodes) {\n    /*\n        如果有child, 返回first-child\n            如果有rsib,返回rsib\n                沿着祖先链往上,找到第一个有rsib的ance,返回这个ance的rsib\n        如果返回null,表明当前节点是sdfs数组的最后一个节点\n    */\n    let fstch = get_fstch(nd,nodes)\n    if(fstch !== null) {\n        return(fstch)\n    } else {\n        let rsib = get_rsib(nd,nodes)\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            return(get_rsib_of_fst_ance_having_rsib(nd,nodes))\n        }\n    }\n}\n\nfunction get_drmost_des(nd,nodes){\n    /*\n       down-most  and right-most of subtree\n       including_self\n    */\n    let old_lstch = nd\n    let lstch = get_lstch(nd,nodes)\n    while(lstch !== null) {\n        old_lstch = lstch\n        lstch = get_lstch(lstch,nodes)\n    }\n    return(old_lstch)\n}\n\nfunction get_sdfs_prev(nd,nodes) {\n    /*\n        如果是root ,返回null 因为root 是起始点\n        如果是叶子节点\n            如果有lsib,返回lsib\n            如果没有lsib,返回parent(没有lsib 说明这个节点是first-child)\n        如果不是叶子节点\n             如果有左邻居\n                 lsib是leaf,返回lsib\n                 lsib不是leaf,返回drmost-of-lsib \n             如果没有lsib,返回parent\n    */ \n    if(is_root(nd)) {\n        return(null)\n    }\n    let cond = is_leaf(nd)\n    if(cond) {\n        let lsib = get_lsib(nd,nodes)\n        if(lsib !== null) {\n            return(lsib)\n        } else {\n            let parent = get_parent(nd,nodes)\n            return(parent)\n        }\n    } else {\n        let lsib = get_lsib(nd,nodes)\n        if(lsib !== null) {\n            let cond = is_leaf(lsib)\n            if(cond) {\n                return(lsib)\n            } else {\n                return(get_drmost_des(lsib,nodes))\n            }\n        } else {\n            let parent = get_parent(nd,nodes)\n            return(parent)\n        }\n    }\n}\n\n\nfunction get_sdfs(nd,nodes) {\n    let nd_depth = get_depth(nd,nodes)\n    let sdfs =[]\n    while(nd!==null) {\n        sdfs.push(nd)\n        nd = get_sdfs_next(nd,nodes)\n        if(nd!==null) {\n            let depth = get_depth(nd,nodes)\n            if(depth<=nd_depth) {\n                break\n            }\n        }\n    }\n    return(sdfs)\n}\n\n//edfs\n\n\nfunction get_dlmost_des(nd,nodes) {\n    /*\n        including_self\n    */\n    let old_fstch = nd\n    let fstch = get_fstch(nd,nodes)\n    while(fstch !== null) {\n        old_fstch = fstch\n        fstch = get_fstch(fstch,nodes)\n    }\n    return(old_fstch)\n}\n\nfunction get_edfs_next(nd,nodes) {\n    let rsib = get_rsib(nd,nodes)\n    if(rsib === null) {\n        //如果没有右兄弟，说明节点是lstch,此时应该返回父节点\n        let p = get_parent(nd,nodes)\n        return(p)\n    } else {\n       //如果有右兄弟，返回down-left-most-of-rsib\n       return(get_dlmost_des(rsib,nodes))\n    }\n}\n\nfunction get_lsib_of_fst_ance_having_lsib(nd,nodes) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have lsib,return the lsib-of-parent\n        ---------\n    */\n    let parent = get_parent(nd,nodes)\n    while(parent!==null) {\n        let lsib = get_lsib(parent,nodes)\n        if(lsib!==null) {\n            return(lsib)\n        } else {\n            parent = get_parent(parent,nodes)\n        }\n    }\n    return(null)\n}\n\n\n\nfunction get_edfs_prev(nd,nodes) {\n    let cond = is_leaf(nd)\n    if(!cond) {\n        return(get_lstch(nd,nodes))\n    } else {\n       let lsib = get_lsib(nd,nodes)\n       if(lsib === null) {\n           return(get_lsib_of_fst_ance_having_lsib(nd,nodes))\n       } else {\n           return(lsib)\n       }\n    }    \n}\n\n\nfunction get_edfs(nd,nodes) {\n    let edfs = []\n    let nxt = get_dlmost_des(nd,nodes)\n    while(nxt !== null ) {\n        edfs.push(nxt)\n        if(nxt._id === nd._id) {\n            break;\n        } else {\n            nxt = get_edfs_next(nxt,nodes)\n        }\n    }\n    return(edfs)\n}\n\n//sedfs\n\nfunction clear_$visited(nodes) {\n    cmmn.dict_foreach(nodes,(k,v)=>{nodes[k]._$visited = false})    \n}\n\nfunction get_sedfs_next(nd,nodes) {\n    let visited = nd._$visited\n    let cond = is_leaf(nd)\n    if(cond) {\n        if(visited) {\n            let rsib = get_rsib(nd,nodes)\n            if(rsib === null) {\n                return(get_parent(nd,nodes))  \n            } else {\n                return(rsib)\n            } \n        } else {\n            nd._$visited = true\n            return(nd)\n        }\n    } else {\n        if(visited) {\n            let rsib = get_rsib(nd,nodes)\n            if(rsib === null) {\n                return(get_parent(nd,nodes)) \n            } else {\n                return(rsib)\n            } \n        } else {\n            nd._$visited = true\n            return(get_fstch(nd,nodes))    \n        }\n    }    \n}\n\n\nfunction get_sedfs_prev(visited,nd,nodes) {\n    let cond = is_leaf(nd)\n    if(cond) {\n        if(visited) {\n            return(nd)\n        } else {\n            let lsib = get_lsib(nd,nodes)\n            if(lsib === null) {\n                return(get_parent(nd,nodes))\n            } else {\n                return(lsib)\n            }\n        }\n    } else {\n        if(visited) {\n            return(get_lstch(nd,nodes))\n        } else {\n            let lsib = get_lsib(nd,nodes)\n            if(lsib === null) {\n                return(get_parent(nd,nodes))\n            } else {\n                return(lsib)\n            }\n        }\n    }\n}\n\nfunction is_sedfs_traverse_finished(start_id,nd) {\n    let cond = (nd._$visited) && (start_id === nd._id)\n    return(cond)\n}\n\nfunction get_sedfs(nd,nodes,deepcopy=false,clear=true) {\n    let sedfs = []\n    clear_$visited(nodes)   \n    let start_id = nd._id\n    while(!is_sedfs_traverse_finished(start_id,nd)) {\n        deepcopy? sedfs.push(cmmn.dcp(nd)):sedfs.push(nd)\n        nd = get_sedfs_next(nd,nodes)\n    }\n    deepcopy?sedfs.push(cmmn.dcp(nd)):sedfs.push(nd)\n    if(clear){\n        clear_$visited(nodes)\n    }\n    return(sedfs)\n}\n\n//\n\nfunction nd2ele(nd,nodes) {\n    let ele = {}\n    ele._depth = get_depth(nd,nodes)\n    ele._breadth = get_breadth(nd,nodes) \n    let p = get_parent(nd,nodes)\n    ele._pbreadth = (p===null)? null : get_breadth(p,nodes) \n    ele._id = nd._id\n    return(ele)\n}\n\n\n\n\nfunction _nd2unhandled_ele(nd) {\n    let o = {}\n    o.ele = {}\n    o.nd = nd\n    o.ele._id = nd._id\n    o.ele._children = []\n    return(o) \n}\n\nfunction sdfs2mat(sdfs,nodes) {\n    let m = []\n    let nd = sdfs[0]\n    let unhandled = [_nd2unhandled_ele(nd)]\n    unhandled[0].ele._pbreadth = null\n    while(unhandled.length>0){\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            unhandled[i].ele._breadth = i\n            unhandled[i].ele._depth = m.length\n            let children = get_children(unhandled[i].nd,nodes)\n            children = children.map(nd=>_nd2unhandled_ele(nd))\n            children.forEach(\n                (r,index)=>{\n                    r.ele._pbreadth = unhandled[i].ele._breadth\n                    unhandled[i].ele._children.push([(m.length+1),next_unhandled.length+index])\n                }\n            )\n            next_unhandled = next_unhandled.concat(children)\n        }\n        let lyr = unhandled.map(r=>r.ele)\n        m.push(lyr)\n        unhandled = next_unhandled\n    }   \n    return(m)        \n}\n\nfunction sdfs2edfs(sdfs,nodes) {\n    return(get_edfs(sdfs[0],nodes))\n}\n\nfunction sdfs2sedfs(sdfs,nodes,deepcopy=false,clear=true) {\n    return(get_sedfs(sdfs[0],nodes,deepcopy,clear))\n}\n\nfunction edfs2mat(edfs,nodes) {\n    let sdfs = edfs2sdfs(edfs,nodes)\n    let m = sdfs2mat(sdfs,nodes)\n    return(m)\n}\n\nfunction edfs2sdfs(edfs,nodes) {\n    let nd = edfs[edfs.length-1]\n    return(get_sdfs(nd,nodes))\n}\n\nfunction edfs2sedfs(edfs,nodes,deepcopy=false,clear=true) {\n    let sdfs = edfs2sdfs(edfs,nodes)\n    return(sdfs2sedfs(sdfs,nodes,deepcopy,clear)) \n}\n\nfunction sedfs2mat(sedfs,nodes) {\n    let sdfs = sedfs2sdfs(sedfs,nodes)\n    return(sdfs2mat(sdfs,nodes))\n}        \n\nfunction sedfs2sdfs(sedfs,nodes) {\n    let nd = sedfs[0]\n    return(get_sdfs(nd,nodes))\n}        \n\nfunction sedfs2edfs(sedfs,nodes) {\n    let sdfs = sedfs2sdfs(sedfs,nodes)\n    return(sdfs2edfs(sdfs,nodes))\n}\n\n\n//\n\nfunction get_deses(nd,nodes,including_self=false) {\n    let deses = get_sdfs(nd,nodes)\n    if(including_self) {\n    } else {\n        deses.splice(0,1)\n    }\n    return(deses)\n}\n\nfunction get_fst_lyr_deses(nd,nodes) {\n    return(get_children(nd,nodes))\n}\n\nfunction get_lst_lyr_deses(nd,nodes) {\n    let deses = get_deses(nd,nodes,false)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    let max = Math.max(...des_depths)\n    deses = deses.filter(r=>(get_depth(r,nodes)===max))\n    return(deses)\n}\n\nfunction get_which_lyr_deses(which,nd,nodes) {\n    let depth = get_depth(nd,nodes)\n    let deses = get_deses(nd,nodes,false)\n    let des_depths = sdfs.map(r=>get_depth(r,nodes))\n    deses = deses.filter(r=>(get_depth(r,nodes)===(depth+which)))\n    return(deses)\n}\n\nfunction get_some_deses(nd,nodes,...whiches) {\n    let deses = whiches.map(which => get_which_deses(which,nd,nodes))\n    deses = Array.prototype.concat(...deses)\n    return(deses)\n}\n\n\n//\nfunction get_root_via_tree(tree) {\n    let k = cmmn.dict_keys(tree)[0]\n    let nd = tree[k]\n    let root = get_root(nd,tree)\n    return(root)\n}\n\nfunction tree2sdfs(tree) {\n    let root = get_root_via_tree(tree)\n    let sdfs = get_sdfs(root,tree) \n    return(sdfs)\n}\n\n\n\nmodule.exports = {\n    //\n    calc_next_id,\n    update_nodes_ids,\n    //creat\n    creat_root:creat_root,\n    creat_nd:creat_nd,\n    //is\n    is_inited:is_inited,\n    is_root:is_root,\n    is_fstch:is_fstch,\n    is_lstch:is_lstch,\n    is_leaf:is_leaf,\n    is_lonely:is_lonely,\n    is_id:is_id,\n    is_connectable:is_connectable,\n    //insert \n    prepend_child:prepend_child,\n    append_child:append_child,\n    insert_child:insert_child,\n    add_rsib:add_rsib,\n    add_lsib:add_lsib,\n    //child\n    get_fstch:get_fstch,\n    get_rsib:get_rsib,\n    get_children:get_children,\n    get_lstch:get_lstch,\n    get_which_child:get_which_child,\n    get_some_children:get_some_children,\n    //sib\n    get_fstsib:get_fstsib,\n    get_lstsib:get_lstsib,\n    get_preceding_sibs:get_preceding_sibs,\n    get_following_sibs:get_following_sibs,\n    get_sibs:get_sibs,\n    get_which_sib:get_which_sib,\n    get_some_sibs:get_some_sibs,\n    get_sibseq:get_sibseq,\n    get_lsib:get_lsib,\n    get_rsib:get_rsib,\n    //mat\n    get_lyr:get_lyr,\n    get_breadth:get_breadth,\n    get_count:get_count,\n    get_depth:get_depth,\n    get_height:get_height,\n    get_fst_lyr_des_depth:get_fst_lyr_des_depth,\n    get_lst_lyr_des_depth:get_lst_lyr_des_depth,\n    get_which_lyr_des_depth:get_which_lyr_des_depth,\n    //ance\n    get_root:get_root,\n    get_parent:get_parent,\n    get_ances:get_ances,\n    get_which_ance:get_which_ance,\n    get_some_ances:get_some_ances,\n    //sdfs\n    get_rsib_of_fst_ance_having_rsib:get_rsib_of_fst_ance_having_rsib,\n    get_sdfs_next:get_sdfs_next,\n    get_drmost_des:get_drmost_des,\n    get_sdfs_prev:get_sdfs_prev,\n    get_sdfs:get_sdfs,\n    //edfs\n    get_lsib_of_fst_ance_having_lsib:get_lsib_of_fst_ance_having_lsib,\n    get_dlmost_des:get_dlmost_des,\n    get_edfs_next:get_edfs_next,\n    get_edfs_prev:get_edfs_prev,\n    get_edfs:get_edfs,\n    //sedfs\n    clear_$visited:clear_$visited,\n    get_sedfs_next:get_sedfs_next,\n    is_sedfs_traverse_finished:is_sedfs_traverse_finished,\n    get_sedfs_prev:get_sedfs_prev,    \n    get_sedfs:get_sedfs,\n    //des\n    get_deses:get_deses,\n    get_fst_lyr_deses:get_fst_lyr_deses,\n    get_lst_lyr_deses:get_lst_lyr_deses,\n    get_which_lyr_deses:get_which_lyr_deses,\n    get_some_deses:get_some_deses,\n    //mat\n    nd2ele:nd2ele,\n    sdfs2mat:sdfs2mat,\n    //\n    sdfs2edfs:sdfs2edfs,\n    sdfs2sedfs:sdfs2sedfs,\n    edfs2mat:edfs2mat,\n    edfs2sdfs:edfs2sdfs,\n    edfs2sedfs:edfs2sedfs,\n    sedfs2mat:sedfs2mat,\n    sedfs2sdfs:sedfs2sdfs,\n    sedfs2edfs:sedfs2edfs,\n    //\n    update_disconnected_nodes,\n    update_orig_nodes,\n    leafize,\n    rootize,\n    disconnect,\n    rm_fstch,\n    rm_lstch,\n    rm_which,\n    rm_some,\n    rm_all,\n    //\n    update_treeid,\n    update_one_nodeid,\n    update_nodes_ids,\n    prepend_child_tree,\n    append_child_tree,\n    add_rsib_tree,\n    add_lsib_tree,\n    insert_child_tree,\n    //\n    get_root_via_tree,\n    tree2sdfs,\n}\n\n\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const fs = require(\"fs\")\n\nfunction rjson(fn) {\n    let buf = fs.readFileSync(fn)\n    let s = buf.toString()\n    let d = JSON.parse(s)\n    return(d)\n}\n\nfunction wjson(fn,js) {\n    let s =JSON.stringify(js)\n    fs.writeFileSync(fn,s)\n}\n\n\nfunction is_int_str(s) {\n    let n = parseInt(s)\n    let ns = n.toString()\n    return(ns === s)\n}\n\n\nmodule.exports = {\n    rjson,\n    wjson,\n    is_int_str,\n}\n","const convert = require('color-convert')\nconst {get_clrd,parse,playout} = require('./cellfunc.js')\nconst {sedfs2html} = require('./whtml.js')\nconst {zones2znds,znds2tree} = require('./zonefunc.js')\nconst {dcp} = require('./util.js')\n\n\nfunction get_dflt_cfg(s) {\n    let {zones,cmat} = parse(s)\n    let clrd = get_clrd(cmat)\n    let nclrd = {}\n    for(let k in clrd) {\n        nclrd[k] = '#'+convert.ansi256.hex(clrd[k])\n    }\n    let width = 100;\n    let height = 100 * (cmat.length/cmat[0].length);\n    let cfg = {\n        root:{tag:'div',style:{height:height+'vw',width:width+'vw','box-sizing':'border-box','background-color':'#000022'}}\n    }\n    for(let k in nclrd) {\n        cfg[k] = {\n            attrib:{\n                style:{\n                    'background-color':nclrd[k],\n                    'box-sizing':'border-box',\n                    'height':'calc(100% - 2vw)',\n                    'width':'calc(100% - 2vw)',\n                    'border-radius':'1vw',\n                    'border':'solid 0.1vw #ffffff'\n                }\n            },\n            tag:'div',\n            text:''\n        }\n    }\n    return(cfg)\n}\n\n\nfunction append_leafs(tree) {\n    var sdfs=tree.$sdfs()\n    var leafs = sdfs.filter(r=>r.$is_leaf())\n    leafs.forEach(\n        r=>{\n            let leaf = r.$append_child()\n            leaf.zone = dcp(r.zone)\n            delete r.zone.rune\n            r.zone.type='row'\n        }\n    )\n    return(tree)\n}\n\nfunction s2html(s,cfg) {\n    if(cfg === undefined) {cfg = get_dflt_cfg(s) }\n    let {zones,cmat} = parse(s)\n    let znds = zones2znds(zones)\n    let tree = znds2tree(znds)\n    tree = append_leafs(tree)\n    let sedfs = tree.$sedfs()\n    let html = sedfs2html(cfg,sedfs)\n    return({\n        cfg:cfg,\n        html:html\n    })\n}\n\n\n\nmodule.exports = {\n    playout,\n    s2html,\n    get_dflt_cfg\n}\n\n\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","/*\n * bmap        rune-bitmap\n * cmat        cell-mat\n * carr        cell-arr\n */\n\nconst {kvlist2d} = require('./util.js')\n\n\n\nfunction s2cmat_bmap(s) {\n    s = s.trim()\n    let lines = s.split('\\n')\n    lines = lines.map(line=>line.trim())\n    let bmap = lines.map(line=>line.split(''))\n    let cmat = bmap.map(\n        (line,row) => {\n            return(line.map((r,col)=>({x:row,y:col,rune:r})))\n        }\n    )\n    return({cmat:cmat,bmap:bmap})\n}\n\nfunction creat_cell(x,y,rune) {\n    let d = {\n        x:x,\n        y:y,\n        rune:rune\n    }\n    return(d)\n}\n\n\nfunction cmat2carr(cmat) {\n    let carr = Array.prototype.concat(...cmat)\n    carr.reverse()\n    return(carr)\n}\n\n\nfunction get_submat_via_tlbr_from_cmat(cmat,tl,br) {\n    let rs = tl.x\n    let cs = tl.y\n    let re = br.x + 1\n    let ce = br.y + 1\n    let submat = []\n    for(let r=rs;r<re;r++) {\n        let row = cmat[r]\n        row = row.slice(cs,ce)\n        submat.push(row)\n    }\n    return(submat)\n}\n\nfunction get_subcarr_via_tlbr_from_cmat(cmat,tl,br) {\n    let submat = get_submat_via_tlbr_from_cmat(cmat,tl,br)\n    return(Array.prototype.concat(...submat))\n}\n\nfunction get_cmat_rn(cmat) {\n    return(cmat.length)\n}\n\nfunction get_cmat_cn(cmat) {\n    return(cmat[0].length)\n}\n\nfunction get_cmat_rncn(cmat) {\n    return([get_cmat_rn(cmat),get_cmat_cn(cmat)])\n}\n\nfunction is_cell_in_cmat(cmat,cell) {\n    let rn = get_cmat_rn(cmat)\n    let cn = get_cmat_cn(cmat)\n    return(\n        (cell.x <= cn) && \n        (cell.y <= rn) && \n        (cmat[cell.x][cell.y].rune === cell.rune)\n    )\n}\n\n\nfunction is_continuous(subcarr,bmap) {\n    let lngth = subcarr.filter(cell=>(bmap[cell.x][cell.y]!==null)).length\n    let expected_lngth = subcarr.length\n    let cond = (lngth === expected_lngth)\n    return(cond)\n}\n\nfunction is_all_having_same_rune(subcarr) {\n    let rune = subcarr[0].rune\n    let cond = subcarr.every(r=>r.rune===rune)\n    return(cond)\n}\n\nfunction is_zone(tl,br,cmat,bmap) {\n    let subcarr = get_subcarr_via_tlbr_from_cmat(cmat,tl,br)\n    let cond0 = is_continuous(subcarr,bmap)\n    let cond1 = is_all_having_same_rune(subcarr)\n    return(cond0 && cond1)\n}\n\n\nfunction is_tl_of(c0,c1) {\n    let cond0 = c0.x <= c1.x\n    let cond1 = c0.y <= c1.y\n    return(cond0 && cond1)\n}\n\nfunction is_br_of(c0,c1) {\n    return(is_tl_of(c1,c0))\n}\n\nfunction creat_zone(tl,br) {\n    let z = {}\n    z.t = tl.x\n    z.l = tl.y\n    z.b = br.x\n    z.r = br.y\n    z.rune = tl.rune\n    return(z)\n}\n\nfunction nullize_bmap(bmap,zonearr) {\n    zonearr.forEach(\n        r=>{\n            bmap[r.x][r.y] = null\n        }\n    )\n    return(bmap)\n}\n\n\nfunction iter_next(unhandled) {\n    let carr = unhandled.carr\n    let zones = unhandled.zones\n    let bmap = unhandled.bmap\n    let cmat = unhandled.cmat\n    for(let i=0;i<carr.length;i++) {\n        let br = carr[i]\n        let brx = br.x\n        let bry = br.y\n        for(let j=carr.length-1;j>i-1;j--) {\n            let tl = carr[j]\n            let cond = is_tl_of(tl,br)\n            if(cond) {\n                let cond = is_zone(tl,br,cmat,bmap)\n                if(cond) {\n                    let zonearr = get_subcarr_via_tlbr_from_cmat(cmat,tl,br)\n                    carr = carr.filter(cell=>!zonearr.includes(cell))\n                    let z = creat_zone(tl,br)\n                    zones.push(z)\n                    bmap = nullize_bmap(bmap,zonearr)\n                    return({\n                        carr:carr,\n                        zones:zones,\n                        cmat:cmat,\n                        bmap:bmap\n                    })\n                } else {\n                }\n            } else {\n            }\n        }\n    }\n}\n\n\nfunction parse(s) {\n    let {cmat,bmap} = s2cmat_bmap(s)\n    let carr = cmat2carr(cmat)\n    let zones = []\n    let unhandled = {carr:carr,zones:zones,cmat:cmat,bmap:bmap}\n    while(unhandled.carr.length>0) {\n        unhandled = iter_next(unhandled)\n    }\n    return(unhandled)\n}\n\n\nfunction ansi256_color_control(s,fg,bg) {\n    if(fg === undefined) {fg = 255}\n    if(bg === undefined) {bg = 0}\n    let control = '\\033[38;5;' +fg +\"m\" + '\\033[48;5;' +bg +\"m\"\n    let dflt =  \"\\033[0m\"\n    return(control+s+dflt)\n}\n\n\nfunction get_clrd(cmat) {\n    let arr = Array.prototype.concat(...cmat)\n    let runes = arr.map(r=>r.rune)\n    runes = new Set(runes)\n    runes = Array.from(runes)\n    let clrs = runes.map((r,i)=>r.charCodeAt()+10*i)\n    let clrd = kvlist2d(runes,clrs)\n    return(clrd)\n}\n\nfunction _playout(cmat) {\n    let clrd = get_clrd(cmat) \n    for(let i=0;i<cmat.length;i++) {\n        let lyr = cmat[i]\n        lyr = lyr.map(r=>ansi256_color_control(r.rune+r.rune,clrd[r.rune],clrd[r.rune]))\n        console.log(lyr.join(''))\n    }\n}\n\nfunction playout(s) {\n    let {zones,cmat} = parse(s)\n    _playout(cmat)\n}\n\n\nmodule.exports = {\n    parse,\n    creat_cell,\n    cmat2carr,\n    get_submat_via_tlbr_from_cmat,\n    get_subcarr_via_tlbr_from_cmat,\n    get_cmat_rn,\n    get_cmat_cn,\n    get_cmat_rncn,\n    is_cell_in_cmat,\n    is_continuous,\n    is_all_having_same_rune,\n    is_zone,\n    is_tl_of,\n    is_br_of,\n    creat_zone,\n    iter_next,\n    s2cmat_bmap,\n    get_clrd,\n    playout,\n    ansi256_color_control,\n}\n\n\n\n","function is_stag(sedfs,i) {\n    let cond = (sedfs[i].$open_at === i)\n    return(cond)\n}\n\n\nfunction is_etag(sedfs,i) {\n    let cond = (sedfs[i].$close_at === i)\n    return(cond)\n}\n\nfunction creat_root_flex(cfg,nd) {\n    let indent = '    '.repeat(nd.$depth()+2) // depth + tag-indent + style-indent\n    let type = nd.zone.type\n    let flex = indent + 'display:flex;' + '\\n'\n    if(type === 'row') {\n        flex = flex + indent + 'flex-direction:column;' + '\\n'\n        flex = flex + indent + 'justify-content:space-around;' + '\\n'\n        flex = flex + indent + 'align-items:center;' + '\\n'\n    } else {\n        flex = flex + indent + 'flex-direction:row;' + '\\n'\n        flex = flex + indent + 'justify-content:space-around;' + '\\n'\n        flex = flex + indent + 'align-items:center;'  +'\\n'       \n    }\n    flex =  flex + indent + 'flex:'+calc_flex(nd)+';' +'\\n'\n    let hw = calc_hw(cfg,nd)\n    if(hw.length >0 ) {\n        flex =  flex + indent + hw[0] +':'+ hw[1]+';' +'\\n'\n    } else {\n        flex =  flex + indent  +'width:'+ cfg.root.style.width +';' +'\\n'\n        flex =  flex + indent  +'height:'+ cfg.root.style.height +';' +'\\n'\n        flex =  flex + indent  +'box-sizing:'+ cfg.root.style['box-sizing'] +';' +'\\n'\n        flex =  flex + indent  +'background-color:'+ cfg.root.style['background-color'] +';' +'\\n'\n    }\n    return(flex)\n}\n\n\nfunction creat_css(style,indent) {\n    let css = \"\"\n    for(let k in style) {\n        css = css+ indent + k+':'+style[k]+';' + '\\n'\n    }\n    return(css)\n}\n\nfunction creat_attrib(attrib,indent) {\n    let s = ''\n    for(let k in attrib) {\n        if(k === 'style') {\n            let style_indent = '    ' + indent\n            s = s + style_indent + 'style=\"' + '\\n'\n            s = s + creat_css(attrib['style'],style_indent+'    ')\n            s = s + style_indent + '\"' + '\\n' \n        } else {\n            let attr_indent =  '    ' + indent\n            s = s + attr_indent +k+'='+'\"'+attrib[k].toString()+'\"' + '\\n' \n        }\n    }\n    return(s)\n}\n\nfunction calc_hw(cfg,nd) {\n    let p = nd.$parent()\n    let depth = nd.$depth()\n    let indent = '    '.repeat(depth+2)\n    if(p !== null ) {\n        let type = p.zone.type\n        if(type === 'col') {\n            return(['height','100%'])\n        } else {\n            return(['width','100%'])\n        }\n    } else {\n        let hwratio = (nd.zone.b - nd.zone.t + 1) / (nd.zone.b - nd.zone.t + 1)\n        return([])\n    }\n}\n\n\nfunction calc_flex(nd) {\n    let p = nd.$parent()\n    if(p !== null ) {\n        let type = p.zone.type \n        if(type === 'col') {\n            let flex = nd.zone.r - nd.zone.l + 1\n            return(flex)\n        } else {\n            let flex = nd.zone.b - nd.zone.t + 1\n            return(flex)\n        }\n    } else {\n        return(1)\n    }\n}\n\n\nfunction creat_stag(cfg,nd) {\n    let tag = ''\n    let rune = nd.zone.rune\n    let depth = nd.$depth()\n    if(rune !== undefined) {\n        tag = cfg[rune].tag? cfg[rune].tag:cfg.root.tag\n        tag = '    '.repeat(depth) + '<'+tag + '\\n'\n        //let flex =  calc_flex(nd)\n        let attrib = cfg[rune].attrib\n        //attrib['style']['flex'] = flex\n        /*\n        let hw = calc_hw(cfg,nd)\n        if(hw.length >0 ) {\n            attrib['style'][hw[0]] = hw[1]\n        } else {\n            attrib['style'].height = cfg.root.style.height\n            attrib['style'].width = cfg.root.style.width      \n        }\n        */\n        attrib = creat_attrib(attrib,'    '.repeat(depth))\n        tag = tag + attrib+'\\n'\n        tag = tag + '    '.repeat(depth) +'>' +'\\n'\n    } else {\n        tag = cfg.root.tag\n        tag = '    '.repeat(depth) + '<'+tag + '\\n'\n        let attrib =  '    '.repeat(depth+1) + 'style=\"' + '\\n' \n        attrib = attrib +  creat_root_flex(cfg,nd) + '\\n'\n\n        attrib = attrib +  '    '.repeat(depth+1) + '\"' +'\\n'\n        tag = tag + attrib+'    '.repeat(depth) +'>' +'\\n'\n    }\n    if( cfg[rune] && cfg[rune].text) {\n        let text = cfg[rune].text\n        tag = tag + '\\n' \n        tag = tag + '    '.repeat(depth+1) + text +'\\n'\n    }\n    return(tag)\n}\n\n\nfunction creat_etag(cfg,nd) {\n    let tag = ''\n    let rune = nd.zone.rune\n    let depth = nd.$depth()\n    if(rune !== undefined) {\n        tag = cfg[rune].tag? cfg[rune].tag:cfg.root.tag\n        tag = '    '.repeat(depth) + '</'+tag + '>\\n'\n    } else {\n        tag = cfg.root.tag\n        tag = '    '.repeat(depth) + '</'+tag + '>\\n'\n    }\n    return(tag)\n}\n\nfunction sedfs2html(cfg,sedfs) {\n    let html =''\n    for(let i=0;i<sedfs.length;i++) {\n        if(is_stag(sedfs,i)) {\n            html = html + creat_stag(cfg,sedfs[i])\n        } else {\n            html = html + creat_etag(cfg,sedfs[i])\n        }\n    }\n    html = html.replace(/\\n+/g,'\\n')\n    return(html)\n}\n\n\nmodule.exports = {\n    is_stag,\n    is_etag,\n    creat_stag,\n    creat_etag,\n    creat_css,\n    creat_attrib,\n    creat_root_flex,\n    calc_flex,\n    sedfs2html,\n}\n","const ndcls = require('ndtreejs').ndcls\nconst {dcp} = require('./util.js')\n\nfunction get_ledge(z) {\n    return({sx:z.l,sy:z.t,ex:z.l,ey:z.b})\n}\n\nfunction get_redge(z) {\n    return({sx:z.r,sy:z.t,ex:z.r,ey:z.b})\n}\n\nfunction get_tedge(z) {\n    return({sx:z.l,sy:z.t,ex:z.r,ey:z.t})\n}\n\nfunction get_bedge(z) {\n    return({sx:z.l,sy:z.b,ex:z.r,ey:z.b})\n}\n\nfunction edge_eq(e0,e1) {\n    let cond0 = (e0.sx === e1.sx)\n    let cond1 = (e0.sy === e1.sy)\n    let cond2 = (e0.ex === e1.ex)\n    let cond3 = (e0.ey === e1.ey)\n    return(cond0 && cond1 && cond2 && cond3)\n}\n\nfunction is_ladj_of(z0,z1) {\n    let redge = get_redge(z0)\n    let ledge = get_ledge(z1)\n    let rlngth = redge.ey - redge.sy + 1\n    let llngth = ledge.ey - ledge.sy + 1\n    let cond0 = (llngth === rlngth)\n    let cond1 = ((redge.sx + 1) === ledge.sx)\n    let cond2 = (z0.t === z1.t)\n    return(cond0 && cond1 && cond2)\n}\n\nfunction is_radj_of(z0,z1) {\n    return(is_ladj_of(z1,z0))\n}\n\nfunction is_tadj_of(z0,z1) {\n    let bedge = get_bedge(z0)\n    let tedge = get_tedge(z1)\n    let blngth = bedge.ex - bedge.sx + 1\n    let tlngth = tedge.ex - tedge.sx + 1\n    let cond0 = (blngth === tlngth)\n    let cond1 = ((bedge.ey + 1) === tedge.sy)\n    let cond2 = (z0.l === z1.l)\n    return(cond0 && cond1 && cond2)\n}\n\nfunction is_badj_of(z0,z1) {\n    return(is_tadj_of(z1,z0))\n}\n\nfunction zones2znds(zones) {\n    let znds = zones.map(zone=>{let nd = new ndcls.Tree();nd.zone = zone;return(nd)})\n    return(znds)\n}\n\n\nfunction sort_znds_l2r(znds) {\n    znds.sort(\n        function(a,b) {\n            return(a.zone.l-b.zone.l)\n        }\n    )\n    return(znds)\n}\n\nfunction sort_znds_t2b(znds) {\n    znds.sort(\n        function(a,b) {\n            return(a.zone.t-b.zone.t)\n        }\n    )\n    return(znds)\n}\n\nfunction sort_znds_tl2br(znds) {\n    znds.sort(\n        function(a,b) {\n            let cond = (a.zone.t-b.zone.t)\n            if(cond === 0) {\n                return(a.zone.l-b.zone.l)\n            } else {\n                return(cond)\n            }\n        }\n    )\n    return(znds)\n}\n\nfunction sort_znds_lt2rb(znds) {\n    znds.sort(\n        function(a,b) {\n            let cond = (a.zone.l-b.zone.l)\n            if(cond === 0) {\n                return(a.zone.t-b.zone.t)\n            } else {\n                return(cond)\n            }\n        }\n    )\n    return(znds)\n}\n\n\nfunction lppend(znd0,znd1) {\n    let z = {\n        t:znd1.zone.t,\n        l:znd1.zone.l,\n        b:znd0.zone.b,\n        r:znd0.zone.r,\n        type:'col'\n    }\n    let pznd = new ndcls.Tree()\n    pznd.zone = z\n    pznd.$append_child(znd1)\n    pznd.$append_child(znd0)\n    return(pznd)\n}\n\nfunction rppend(znd0,znd1) {\n    let z = {\n        t:znd0.zone.t,\n        l:znd0.zone.l,\n        b:znd1.zone.b,\n        r:znd1.zone.r,\n        type:'col'\n    }\n    let pznd = new ndcls.Tree()\n    pznd.zone = z\n    pznd.$append_child(znd0)\n    pznd.$append_child(znd1)\n    return(pznd)\n}\n\n\nfunction tppend(znd0,znd1) {\n    let z = {\n        t:znd1.zone.t,\n        l:znd1.zone.l,\n        b:znd0.zone.b,\n        r:znd0.zone.r,\n        type:'row'\n    }\n    let pznd = new ndcls.Tree()\n    pznd.zone = z\n    pznd.$append_child(znd1)\n    pznd.$append_child(znd0)\n    return(pznd)\n}\n\nfunction bppend(znd0,znd1) {\n    let z = {\n        t:znd0.zone.t,\n        l:znd0.zone.l,\n        b:znd1.zone.b,\n        r:znd1.zone.r,\n        type:'row'\n    }\n    let pznd = new ndcls.Tree()\n    pznd.zone = z\n    pznd.$append_child(znd0)\n    pznd.$append_child(znd1)\n    return(pznd)\n}\n\nfunction iter_next_l2r(d) {\n    unhandled = d.unhandled\n    handled = d.handled\n    let znd = unhandled[0]\n    let next_unhandled = []\n    for(let i=1;i<unhandled.length;i++){\n        let other = unhandled[i]\n        let cond = is_radj_of(other.zone,znd.zone)\n        if(cond) {\n            znd = rppend(znd,other)\n        } else {\n            next_unhandled.push(other)\n        }\n    }\n    handled.push(znd)\n    unhandled = next_unhandled\n    return({handled:handled,unhandled:unhandled})\n}\n\n\nfunction iter_next_t2b(d) {\n    unhandled = d.unhandled\n    handled = d.handled\n    let znd = unhandled[0]\n    let next_unhandled = []\n    for(let i=1;i<unhandled.length;i++){\n        let other = unhandled[i]\n        let cond = is_badj_of(other.zone,znd.zone)\n        if(cond) {\n            znd = bppend(znd,other)\n        } else {\n            next_unhandled.push(other)\n        }\n    }\n    handled.push(znd)\n    unhandled = next_unhandled\n    return({handled:handled,unhandled:unhandled})\n}\n\nfunction agg_l2r(znds) {\n    let unhandled = sort_znds_lt2rb(znds)\n    let handled =[]\n    d = {unhandled:unhandled,handled:handled}\n    while(d.unhandled.length>0) {\n        d = iter_next_l2r(d)\n    }\n    return(d.handled)\n}\n\nfunction agg_t2b(znds) {\n    let unhandled = sort_znds_tl2br(znds)\n    let handled =[]\n    d = {unhandled:unhandled,handled:handled}\n    while(d.unhandled.length>0) {\n        d = iter_next_t2b(d)\n    }\n    return(d.handled)\n}\n\n\nfunction znds2tree(znds) {\n    while(znds.length>1) {\n        let l2r_agg = agg_l2r(znds.map(znd=>znd.$clone()))\n        let t2b_agg = agg_t2b(znds.map(znd=>znd.$clone()))\n        if(t2b_agg.length<l2r_agg.length) {\n            znds = t2b_agg\n        } else {\n            znds = l2r_agg\n        }\n    }\n    return(znds[0])\n}\n\n\nfunction show_znd_tree(tree) {\n    let sdfs = tree.$sdfs()\n    for(let i=0;i<sdfs.length;i++) {\n        let z = sdfs[i]\n        let depth = z.$depth()\n        let indent = '    '.repeat(depth)+i+':'\n        let tag = (z.zone.type === undefined)?z.zone.rune:z.zone.type\n        console.log(indent+tag)\n    }\n}\n\n\nmodule.exports = {\n    get_ledge,\n    get_redge,\n    get_tedge,\n    get_bedge,\n    edge_eq,\n    is_ladj_of,\n    is_radj_of,\n    is_tadj_of,\n    is_badj_of,\n    zones2znds,\n    sort_znds_l2r,\n    sort_znds_t2b,\n    sort_znds_tl2br,\n    sort_znds_lt2rb,\n    lppend,\n    rppend,\n    tppend,\n    bppend,\n    iter_next_l2r,\n    iter_next_t2b,\n    agg_l2r,\n    agg_t2b,\n    znds2tree,\n    show_znd_tree,\n}\n","const ndcls = require('./ndcls.js')\nconst ndfunc = require('./ndfunc.js')\nconst ndfuncterm = require('./ndfuncterm.js')\nconst ndutil = require('./util.js')\n\nmodule.exports = {\n    ndfunc:ndfunc,\n    ndfuncterm:ndfuncterm,\n    ndcls:ndcls,\n    ndutil:ndutil,\n}\n","const ndutil = require('./util.js')\nconst cmmn = require('./cmmn.js')\nconst ndfunc = require('./ndfunc.js')\nconst EventTarget = require('./event-target.js').EventTarget\nconst STRUCT_KEYS = ['_fstch','_lsib','_rsib','_parent','_tree']\n\n\nfunction _is_inited(nd) {\n    //被添加到了树上\n    let cond = (nd._tree !== undefined)\n    return(cond)\n}\n\nfunction _is_root(nd) {\n    //根节点的_tree 指向自己\n    let cond = (nd._tree === nd)\n    return(cond)\n}\n\nfunction _is_fstch(nd) {\n    //没有左兄弟\n    let cond = (nd._lsib === null)\n    return(cond)\n}\n\nfunction _is_lstch(nd) {\n    //没有右兄弟\n    let cond = (nd._rsib === null)\n    return(cond)\n}\n\n\nfunction _is_leaf(nd) {\n    //没有子\n    let cond = (nd._fstch === null)\n    return(cond)\n}\n\n\nfunction _is_lonely(nd) {\n    let sibs = nd.$sibs(true)\n    return(sibs.length === 1)\n}\n\n\nfunction _is_connectable(nd) {\n    return(_is_root(nd) || !_is_inited(nd))\n}\n\n\n\n/* child query*/\n\n//_fstch is always directly\n\nfunction _lstch(nd) {\n    let child = nd._fstch\n    let oldch = child\n    while(child!==null) {\n        oldch = child\n        child = child._rsib\n    }\n    return(oldch)\n}\n\nfunction _which_child(index,nd) {\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(c === index) {\n            return(child)\n        } else {\n            if(child === null) {\n                return(child)\n            } else {\n            }\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\nfunction _some_children(nd,...whiches) {\n    let children = []\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(whiches.includes(c)) {\n            children.push(child)\n        } else {\n            if(child === null) {\n                return(children)\n            } else {\n            }\n        }\n        child = child._rsib \n        c = c + 1\n    }\n}\n\nfunction _children(nd) {\n    let children = []\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(child === null) {\n            return(children)\n        } else {\n            children.push(child)\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\n\nfunction _children_count(nd) {\n    let c = 0\n    let child = nd._fstch\n    while(true) {\n        if(child === null) {\n            return(c)\n        } else {\n        }\n        child = child._rsib\n        c = c + 1\n    }\n}\n\n\n/*sib*/\n\n//_rsib is always directly \n\nfunction _lstsib(nd,including_self=false) {\n    let rsib = nd._rsib\n    let oldrsib = nd\n    while(rsib !== null) {\n        oldrsib = rsib\n        rsib = rsib._rsib \n    }  \n    if(including_self){\n        return(oldrsib)\n    } else {\n        if(oldrsib !== nd) {\n            return(oldrsib)\n        } else {\n            return(null)\n        }\n    }    \n}\n\n\n\nfunction _fstsib(nd,including_self=false) {\n    let p = _parent(nd)\n    if(p === null) {\n        return((including_self)?nd:null)\n    } else {\n        let fstsib = p._fstch\n        if(including_self) {\n            return(fstsib)        \n        } else {\n            if(fstsib !== nd) {\n                return(fstsib)\n            } else {\n                return(null)\n            }\n        }\n    }\n}\n\n\nfunction _lsib(nd) {\n    let fstsib = _fstsib(nd,false)\n    if(fstsib === null) {\n        return(null)\n    } else {\n        let sib = fstsib\n        while(true) {\n            if(sib._rsib === nd) {\n                return(sib)\n            } else {\n            }\n            sib = sib._rsib\n        }\n    }\n}\n\n\nfunction _psibs(nd) {\n    let psibs = []\n    let fstsib = _fstsib(nd,true)\n    let sib = fstsib\n    while(sib !== null) {\n        if(sib === nd) {\n            return(psibs)           \n        } else {\n            psibs.push(sib)\n        }\n        sib = sib._rsib\n    }\n}\n\n\nfunction _fsibs(nd) {\n    let fsibs = []\n    let rsib = nd._rsib\n    while(rsib !== null) {\n        fsibs.push(rsib)\n        rsib = rsib._rsib\n    }\n    return(fsibs)\n}\n\nfunction _sibs(nd,including_self=false) {\n    let psibs = _psibs(nd)\n    let fsibs = _fsibs(nd)\n    let me = [nd]\n    if(including_self) {\n        sibs = psibs.concat(me,fsibs)\n    } else {\n        sibs = psibs.concat(fsibs)\n    }\n    return(sibs)\n}\n\n\nfunction _which_sib(index,nd) {\n    let sib = _fstsib(nd,true)\n    let c = 0\n    while(true) {\n        if(sib === null) {\n            return(null)\n        } else {\n            if(c==index) {\n                return(sib)\n            }\n        }\n        sib = sib._rsib\n        c = c + 1\n    }    \n}\n\nfunction _some_sibs(nd,...indexes) {\n    let sibs = _sibs(nd,true) \n    let some = sibs.filter(\n        (r,i) => indexes.includes(i) \n    )\n    return(some)   \n}\n\n\nfunction _sibseq(nd) {\n    let psibs = _psibs(nd)\n    return(psibs.length)\n}\n\n\nfunction _sibs_count(nd,including_self=false) {\n    let sibs = nd.$sibs(including_self)\n    return(sibs.length)\n}\n\n\n\n\n/*ance*/\n\nfunction _parent(nd) {\n    let lstsib = _lstsib(nd,true)\n    return(lstsib._parent)\n}\n\nfunction _root(nd) {\n    let ance = nd\n    let old = nd\n    while(ance !== null) {\n        old = ance\n        ance = ance.$parent()\n    }\n    return(old)    \n}\n\nfunction _which_ance(index,nd) {\n    let c = 0\n    let ance = nd\n    while(ance !== null) {\n        if(c === index) {\n            return(ance)\n        } else {\n        }\n        ance = ance.$parent()\n        c = c+1\n    }\n    return(null)\n}\n\nfunction _ances(nd,including_self=false) {\n    let ances = []\n    let ance = nd\n    if(including_self) {\n        ances.push(ance)\n    } else {\n    } \n    ance = ance.$parent()\n    while(ance !== null)  {\n        ances.push(ance)\n        ance = ance.$parent()\n    }\n    return(ances) \n}\n\nfunction _some_ances(nd,...indexes) {\n    let ances = _ances(nd,true)\n    let some = ances.filter(\n        (r,i) => indexes.includes(i)\n    )\n    return(some)      \n}\n\nfunction _ances_count(nd,including_self=false) {\n    let ances = _ances(nd,including_self)\n    return(ances.length)\n}\n\n\n/**/\nfunction _luncle(nd) {\n    let p = nd.$parent()\n    if(p === null) {\n        return(null)\n    } else {\n        return(p.$lsib())\n    } \n}\n\nfunction _runcle(nd) {\n    let p = nd.$parent()\n    if(p === null) {\n        return(null)\n    } else {\n        return(p.$rsib())\n    } \n}\n\nfunction _lcin(nd) {\n    let luncle = nd.$luncle()\n    if(!nd.$is_fstch()) {\n        return(null) \n    } else if(luncle === null) {\n        return(null)\n    } else {\n        return(luncle.$lstch())\n    }\n}\n\nfunction _rcin(nd) {\n    let runcle = nd.$runcle()\n    if(!nd.$is_lstch()) {\n        return(null)\n    } else if(runcle === null) {\n        return(null)\n    } else {\n        return(runcle.$fstch())\n    }\n}\n\n/**/\n\nfunction _lyr(nd) {\n    let rt = nd.$root() \n    let sdfs = rt.$sdfs() \n    let depth = nd.$depth()\n    let lyr = sdfs.filter(nd=>(nd.$depth() === depth))\n    return(lyr)    \n}\n\n/**/\n\n\nfunction _breadth(nd) {\n    let lyr = nd.$lyr()\n    let breadth = lyr.indexOf(nd)\n    return(breadth)   \n}\n\nfunction _width(nd) {\n    //只计算叶子个数的宽度\n    let sdfs = nd.$sdfs()\n    sdfs = sdfs.filter(nd=>nd.$is_leaf())\n    return(sdfs.length)\n}\n\nfunction _offset(nd) {\n    //edfs filter-by-isleaf ,and then index \n    //如果是非叶子,dlmost的offset\n    let rt = nd.$root()\n    let edfs = rt.$edfs()\n    let index;\n    if(nd.$is_leaf()) {\n        index = edfs.indexOf(nd) \n    } else {\n        let dlmost = nd.$dlmost_des()\n        index = edfs.indexOf(dlmost)\n    }\n    edfs = edfs.slice(0,index+1)\n    offset = edfs.filter(nd=>nd.$is_leaf()).length - 1\n    return(offset) \n}\n\n/**/\n\n\nfunction _deses(nd,including_self=false) {\n    let drmost = _drmost_des(nd) \n    let sdfs = _sdfs(nd)\n    let index = sdfs.indexOf(drmost) \n    if(including_self) {\n        return(sdfs.slice(0,index+1)) \n    } else {\n        return(sdfs.slice(1,index+1)) \n    } \n}\n\nfunction _lst_lyr_deses(nd) {\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    let max = Math.max(...des_depths)\n    deses = deses.filter(r=>(r.$depth()===max))\n    return(deses) \n}\n\nfunction _which_lyr_deses(index,nd) {\n    let depth = nd.$depth()\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    deses = deses.filter(r=>(r.$depth()===(depth+index)))\n    return(deses)\n}\n\nfunction _some_lyrs_deses(nd,...rel_depths) {\n    let depth = nd.$depth()\n    let abs_depths = rel_depths.map(r=>r+depth)\n    let deses = nd.$deses(false)\n    let des_depths = deses.map(r=>r.$depth())\n    deses = deses.filter(r=>(abs_depths.includes(r.$depth())))\n    return(deses)\n}\n\n\n/*add node */\n\nfunction _prepend_child(nd,child) {\n    if(_is_connectable(child)) {} else { console.log('only root or uninited could be prepend');return(child)} \n    //只有根节点才可以被链接到另一颗树上\n    let cond = nd.$is_leaf()\n    child._tree = nd._tree\n    child._lsib = null\n    if(cond){\n        //child 也是lstch\n        child._rsib = null\n        child._parent = nd\n        //不改动fstch\n    } else {\n        //变更old_fstch\n        let old_fstch = nd._fstch\n        //old_fstch 不再是fstch\n        old_fstch._lsib = undefined\n        //更新child\n        child._rsib = old_fstch\n        //child 不是lstch _parent 置为 未计算\n        child._parent = undefined\n        //不改动fstch\n    }   \n    nd._fstch = child\n    return(child)\n}   \n\n\nfunction _append_child(nd,child) {\n    if(_is_connectable(child)) {} else { console.log('only root or uninited could be prepend');return(child)}\n    let cond = nd.$is_leaf() \n    child._tree = nd._tree\n    child._rsib = null\n    if(cond){\n        //child 也是lstch\n        nd._fstch = child\n        child._lsib = null\n        //不改动child fstch 维持子树\n    } else {\n        //变更old_lstch\n        let old_lstch = nd.$lstch() \n        //old_lstch 不再是lstch\n        old_lstch._parent = undefined\n        old_lstch._rsib = child\n        //child 不是fstch _lsib置为 undefined\n        child._lsib = undefined\n    }\n    child._parent = nd\n    return(child)\n}\n\n\n\nfunction _add_rsib(nd,rsib) {\n    if(_is_connectable(rsib)) {} else { console.log('only root or uninited could be add');return(rsib)}\n    //root 不可操作\n    if(nd.$is_root()) {\n        console.log(\"cant addrsib to root\")\n        return(nd)\n    }\n    //\n    let cond = nd.$is_lstch()\n    rsib._tree = nd._tree\n    if(cond) {\n        rsib._parent = nd._parent\n        nd._parent = undefined\n        rsib._rsib = null\n    } else {\n        rsib._rsib = nd._rsib\n        rsib._parent = undefined\n    }\n    nd._rsib = rsib\n    //rsib 一定不是fstch\n    rsib._lsib = undefined\n    //\n    return(rsib)\n}\n\n\nfunction _add_lsib(nd,lsib) {\n    if(_is_connectable(lsib)) {} else { console.log('only root or uninited could be add');return(lsib)}\n    //root 不可操作\n    if(nd.$is_root()) {\n        console.log(\"cant addlsib to root\")\n        return(nd)\n    }\n    //\n    let cond = nd.$is_fstch()\n    lsib._tree = nd._tree\n    if(cond) {\n        let parent = nd.$parent() \n        nd._lsib = undefined\n        lsib._lsib = null\n        parent._fstch = lsib\n    } else {\n        let old_lsib = nd.$lsib()\n        old_lsib._rsib = lsib\n        //\n        lsib._lsib = undefined\n    }\n    lsib._rsib = nd\n    //lsib 一定不是lstch\n    lsib._parent = undefined\n    //\n    return(lsib)\n}\n\n\nfunction _insert_child(which,nd,child) {\n    let children = _children(nd)\n    let lngth = children.length\n    if(lngth ===0) {\n        child = _prepend_child(nd,child)\n    } else {\n        let cond = (which<=lngth) && (which >=0)\n        if(!cond) {\n            console.log(\"not in range!!\")\n        } else {\n            if(which === 0) {\n                child = _prepend_child(nd,child)\n            } else if(which === lngth) {\n                child = _append_child(nd,child)\n            } else {\n                let lnd = children[which-1]\n                child = _add_rsib(lnd,child)\n            }   \n        }   \n    }\n    return(child)   \n}   \n\n\n/*sdfs*/\n\nfunction _rsib_of_fst_ance_having_rsib(nd) {\n    let p = nd.$parent()\n    while(p!==null) {\n        let rsib = p.$rsib()\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            p = p.$parent()  \n        }\n    }\n    return(null)\n}\n\nfunction _sdfs_next(nd) {\n    let fstch = nd.$fstch()\n    if(fstch !== null) {\n        return(fstch)\n    } else {\n        let rsib = nd.$rsib()\n        if(rsib !== null) {\n            return(rsib)\n        } else {\n            return(nd.$rsib_of_fst_ance_having_rsib())\n        }\n    }    \n}\n\nfunction _drmost_des(nd) {\n    let old_lstch = nd\n    let lstch = nd.$lstch()\n    while(lstch !== null) {\n        old_lstch = lstch\n        lstch = lstch.$lstch()\n    }\n    return(old_lstch)\n}\n\nfunction _sdfs_prev(nd) {\n    if(nd.$is_root()) {\n        return(null)\n    }\n    let cond = nd.$is_leaf()\n    if(cond) {\n        let lsib = nd.$lsib()\n        if(lsib !== null) {\n            return(lsib)\n        } else {\n            let parent = nd.$parent()\n            return(parent)\n        }\n    } else {\n        let lsib = nd.$lsib()\n        if(lsib !== null) {\n            let cond = lsib.$is_leaf()\n            if(cond) {\n                return(lsib)\n            } else {\n                return(lsib.$drmost_des())\n            }\n        } else {\n            let parent = nd.$parent()\n            return(parent)\n        }\n    }\n}\n\nfunction _sdfs(nd) {\n    let depth = nd.$depth()\n    if(nd === null) {\n        return([])\n    } else {\n        let sdfs =[nd]\n        nd = nd.$sdfs_next()\n        while(nd!==null && (nd.$depth() >depth) ) {\n            sdfs.push(nd)\n            nd = nd.$sdfs_next()\n        }\n        return(sdfs)  \n    }  \n}\n\n/**/\n\nfunction _dlmost_des(nd) {\n    let old_fstch = nd\n    let fstch = nd.$fstch()\n    while(fstch !== null) {\n        old_fstch = fstch\n        fstch = fstch.$fstch()\n    }\n    return(old_fstch)\n}\n\nfunction _edfs_next(nd) {\n    let rsib = nd.$rsib()\n    if(rsib === null) {\n        //如果没有右兄弟，说明节点是lstch,此时应该返回父节点\n        let p = nd.$parent()\n        return(p)\n    } else {\n       //如果有右兄弟，返回down-left-most-of-rsib\n       return(rsib.$dlmost_des())\n    }\n}\n\nfunction _lsib_of_fst_ance_having_lsib(nd) {\n    /*\n        along the parent chain until root,not_including_self\n        if the parent have lsib,return the lsib-of-parent\n        ---------\n    */\n    let parent = nd.$parent() \n    while(parent!==null) {\n        let lsib = parent.$lsib()\n        if(lsib!==null) {\n            return(lsib)\n        } else {\n            parent = parent.$parent()\n        }\n    }\n    return(null)\n}\n\nfunction _edfs_prev(nd) {\n    let cond = nd.$is_leaf() \n    if(!cond) {\n        return(nd.$lstch())\n    } else {\n       let lsib = nd.$lsib()\n       if(lsib === null) {\n           return(nd.$lsib_of_fst_ance_having_lsib())\n       } else {\n           return(lsib)\n       }\n    }   \n}\n\n\n\nfunction _edfs(nd) {\n    let edfs = []\n    let nxt = nd.$dlmost_des()\n    while(nxt !== null ) {\n        edfs.push(nxt)\n        if(nxt === nd) {\n            break;\n        } else {\n            nxt = nxt.$edfs_next()\n        }\n    }\n    return(edfs)\n\n}\n\n\n/**/\n\nfunction _sedfs_next(nd) {\n    let visited = nd.$visited\n    let cond = nd.$is_leaf() \n    if(cond) {\n        if(visited) {\n            let rsib = nd.$rsib()\n            if(rsib === null) {\n                return(nd.$parent())\n            } else {\n                return(rsib)\n            }\n        } else {\n            nd.$visited = true\n            return(nd)\n        }\n    } else {\n        if(visited) {\n            let rsib = nd.$rsib()\n            if(rsib === null) {\n                return(nd.$parent())\n            } else {\n                return(rsib)\n            }\n        } else {\n            nd.$visited = true\n            return(nd.$fstch())\n        }\n    }   \n}\n\nfunction _sedfs_prev(visited,nd) {\n    let cond = nd.$is_leaf() \n    if(cond) {\n        if(visited) {\n            return(nd)\n        } else {\n            let lsib = nd.$lsib()\n            if(lsib === null) {\n                return(nd.$parent())\n            } else {\n                return(lsib)\n            }\n        }\n    } else {\n        if(visited) {\n            return(nd.$lstch())\n        } else {\n            let lsib = nd.$lsib()\n            if(lsib === null) {\n                return(nd.$parent())\n            } else {\n                return(lsib)\n            }\n        }\n    }\n}\n\nfunction _clear_visited(nd) {\n    let sdfs = nd.$sdfs()\n    sdfs.forEach(\n        nd=>{delete nd.$visited}\n    )\n}\n\nfunction _is_sedfs_traverse_finished(startnd,nd) {\n    let cond = (nd.$visited) && (startnd === nd)\n    return(cond)\n}\n\nfunction _sedfs(nd) {\n    _clear_visited(nd);\n    let sedfs = []\n    let st = new Set()\n    let startnd = nd\n    while(!_is_sedfs_traverse_finished(startnd,nd)) {\n        if(st.has(nd)) {\n            nd.$close_at = sedfs.length\n        } else {\n            nd.$open_at = sedfs.length\n            st.add(nd) \n        }\n        sedfs.push(nd)\n        nd = _sedfs_next(nd)\n    }\n    startnd.$close_at = sedfs.length\n    sedfs.push(startnd)\n    sedfs.forEach(nd=>{delete nd.$visited})     \n    return(sedfs)    \n}\n\n\n/**/\nfunction _leafize(nd) {\n    nd._fstch = null\n    return(nd)\n}\n\nfunction _rootize(nd) {\n    nd._lsib = null\n    nd._rsib = null\n    nd._parent = null\n    return(nd)\n}\n\nfunction _update_disconnected_nodes(nd) {\n    let nsdfs = nd.$sdfs() \n    nsdfs.forEach(\n       nd=> {\n           nd._tree = nsdfs[0]\n       }\n    )\n    return(nsdfs)\n}\n\n\n\nfunction _disconn(nd) {\n    let cond = nd.$is_root() \n    if(cond) {\n        //do nothing\n        return(nd)\n    } else if(nd.$is_lonely()) {\n        //\n        let parent = nd.$parent() \n        _leafize(parent); \n        let nsdfs = _update_disconnected_nodes(nd);\n        _rootize(nd);\n        return(nd)\n    } else {\n        if(nd.$is_fstch()) {\n            //节点变味新树的根节点\n            let rsib = nd.$rsib()\n            //右兄弟变成了fstch, lsib 指向null\n            rsib._lsib = null\n            //右兄弟变成了fstch,parent要指向rsib\n            // parent 的fstch 要指向rsib\n            let parent = nd.$parent() \n            parent._fstch = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        } else if(nd.$is_lstch()) {    \n            //节点变味新树的根节点\n            let lsib = nd.$lsib() \n            lsib._rsib = nd._rsib\n            //左兄弟变成了lstch,左邻居要指向parent\n            lsib._parent = nd._parent\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        } else {\n            //节点变味新树的根节点\n            let lsib = nd.$lsib() \n            lsib._rsib = nd._rsib\n            //后代节点关系不变，但是tree变为当前节点._id\n            let nsdfs = _update_disconnected_nodes(nd)\n            //nd 变为分离出去的tree的root\n            _rootize(nd);\n            return(nd)\n        }\n    }  \n}\n\n\n\n/**/\nfunction _add_extra(d,nd) {\n    for(let k in d) {\n        nd[k] = d[k]\n    }\n}\n/**/\n\nfunction _nd2unhandled_ele(nd) {\n    let ele = {}\n    ele._nd = nd\n    ele._children = []\n    return(ele)\n}\n\n\nfunction _sdfs2mat(sdfs) {\n    let m = []\n    let nd = sdfs[0]\n    let unhandled = [_nd2unhandled_ele(nd)]\n    unhandled[0]._pbreadth = null\n    while(unhandled.length>0){\n        let next_unhandled = []\n        for(let i=0;i<unhandled.length;i++) {\n            unhandled[i]._breadth = i\n            unhandled[i]._depth = m.length\n            let children = unhandled[i]._nd.$children() \n            children = children.map(nd=>_nd2unhandled_ele(nd))\n            children.forEach(\n                (r,index)=>{\n                    r._pbreadth = unhandled[i]._breadth\n                    unhandled[i]._children.push([(m.length+1),next_unhandled.length+index])\n                }\n            )\n            next_unhandled = next_unhandled.concat(children)\n        }\n        let lyr = unhandled\n        m.push(lyr)\n        unhandled = next_unhandled\n    }  \n    return(m)\n}\n\n\n/**/\n\nclass _Node extends EventTarget {\n    constructor() {\n        super();\n        this._fstch = null\n        this._lsib = undefined\n        this._rsib = undefined\n        this._parent = undefined\n        this._tree = undefined\n        this.$guid = cmmn.gen_guid()\n    }\n    $is_inited() {\n        return(_is_inited(this))\n    }\n    $is_root() {\n        return(_is_root(this))\n    }\n    $is_fstch() {\n        return(_is_fstch(this))\n    }\n    $is_lstch() {\n        return(_is_lstch(this))\n    }   \n    $is_leaf() {\n        return(_is_leaf(this))\n    }\n    $is_lonely() {\n        return(_is_lonely(this))\n    }\n    //child\n    $fstch() {\n        return(this._fstch)\n    }\n    $lstch() {\n        return(_lstch(this))\n    }\n    $which_child(index) {\n        return(_which_child(index,this))\n    }\n    $some_children(...indexes) {\n        return(_some_children(this,...indexes))\n    }\n    $children() {\n        return(_children(this))\n    }\n    $children_count() {\n        return(_children_count(this))\n    }\n    //\n    $rsib() {\n        return(this._rsib)\n    }\n    $lsib() {\n        return(_lsib(this))\n    }\n    $fstsib(including_self=false) {\n        return(_fstsib(this,including_self))\n    } \n    $lstsib(including_self=false) {\n        return(_lstsib(this,including_self))\n    }\n    $psibs() {\n        return(_psibs(this))\n    }\n    $fsibs() {\n        return(_fsibs(this))\n    }\n    $which_sib(index) {\n        return(_which_sib(index,this))\n    }\n    $some_sibs(...indexes) {\n        return(_some_sibs(this,...indexes))\n    }\n    $sibseq() {\n        return(_sibseq(this))\n    }\n    $sibs(including_self=false) {\n        return(_sibs(this,including_self))\n    }\n    $sibs_count(including_self=false) {\n        return(_sibs_count(this,including_self))\n    } \n    //\n    $parent() {\n        return(_parent(this))\n    } \n    $root() {\n        return(_root(this))\n    } \n    $ances(including_self=false) {\n        return(_ances(this,including_self))\n    }\n    $which_ance(index) {\n        return(_which_ance(index,this))\n    }\n    $some_ances(...indexes) {\n        return(_some_ances(this,...indexes))\n    }\n    $ances_count(including_self=false) {\n        return(_ances_count(this,including_self))\n    }\n    //\n    $prepend_child(child) {\n        child = (child===undefined)?(new _Node()):child\n        return(_prepend_child(this,child))       \n    }\n    $insert_child(which,child) {\n        child = (child===undefined)?(new _Node()):child\n        return(_insert_child(which,this,child))\n    }\n    $append_child(child)  {\n        child = (child===undefined)?(new _Node()):child\n        return(_append_child(this,child))\n    }\n    $clone() {\n        if(_is_root(this)) {\n            let ndict = _dump(this)\n            return(_load(ndict))\n        } else {\n            let index = _sibseq(this)\n            let parent = _parent(this)\n            _disconn(this)\n            let ndict = _dump(this)\n            let dup = _load(ndict)\n            _insert_child(index,parent,this)\n            return(dup)   \n        } \n    }\n    $append_children(n,child) {\n        let children = []\n        for(let i=0;i<n;i++) {\n            let ch = (child===undefined)?(new _Node()):child.$clone()\n            ch = _append_child(this,ch)\n            children.push(ch)\n        }\n        return(children)\n    }\n    //\n    $add_rsib(rsib) {\n        rsib = (rsib===undefined)?(new _Node()):rsib\n        return(_add_rsib(this,rsib))\n    }\n    $add_lsib(lsib)  {\n        lsib = (lsib===undefined)?(new _Node()):lsib\n        return(_add_lsib(this,lsib))\n    }  \n    //\n    $rsib_of_fst_ance_having_rsib() {\n        return(_rsib_of_fst_ance_having_rsib(this))\n    } \n    $sdfs_next() {\n        return(_sdfs_next(this)) \n    }\n    $drmost_des() {\n        return(_drmost_des(this))\n    }\n    $sdfs_prev() {\n        return(_sdfs_prev(this))\n    }\n    $sdfs() {\n        return(_sdfs(this))\n    }\n    //\n    $dlmost_des() {\n        return(_dlmost_des(this))\n    }\n    $edfs_next() {\n        return(_edfs_next(this))\n    }\n    $lsib_of_fst_ance_having_lsib() {\n        return(_lsib_of_fst_ance_having_lsib(this))\n    }\n    $edfs_prev() {\n        return(_edfs_prev(this))\n    }\n    $edfs() {\n        return(_edfs(this))\n    }\n    $offset() {\n        return(_offset(this))\n    }\n    //\n    $sedfs_next() {\n        return(_sedfs_next(this))\n    }\n    $sedfs_prev(visited) {\n        return(_sedfs_prev(this))\n    }\n    $sedfs(){\n        return(_sedfs(this))\n    }\n    //\n    $deses(including_self=false) {\n        return(_deses(this,including_self))\n    }\n    $lst_lyr_deses() {\n        return(_lst_lyr_deses(this))\n    }\n    $which_lyr_deses(index) {\n        return(_which_lyr_deses(index,this))\n    }\n    $some_lyrs_deses(...rel_depths) {\n        return(_some_lyrs_deses(this,...rel_depths))\n    }\n    //\n    $count(including_self=true) {\n        return(_deses(this,including_self).length)\n    }\n    $depth(including_self=false) {\n        return(_ances(this,including_self).length)\n    }\n    $height() {\n        let depth = this.$depth()\n        let sdfs = this.$sdfs()\n        let des_depths = sdfs.map(nd=>nd.$depth())\n        let max = Math.max(...des_depths)\n        return(max-depth+1)        \n    }\n    $breadth() {\n        return(_breadth(this))\n    }\n    $width() {\n        return(_width(this))\n    }\n    //\n    $lyr() {\n        return(_lyr(this))\n    }\n    //\n    $lcin() {\n        return(_lcin(this))\n    }\n    $rcin() {\n        return(_rcin(this))\n    }\n    $luncle() {\n        return(_luncle(this))\n    }\n    $runcle() {\n        return(_runcle(this))\n    }\n    //\n    $sdfs_repr() {\n        let rt = this.$root()\n        let tree = _sdfs(rt)\n        let sdfs = _sdfs(this)\n        let depths = sdfs.map(nd=>nd.$depth()) \n        let indents = depths.map(depth=>'    '.repeat(depth))\n        indents.forEach((indent,i)=>{console.log(indent+'['+tree.indexOf(sdfs[i])+']'+' : '+sdfs[i].$guid)})    \n    }\n    $sedfs_repr() {\n        let rt = this.$root()\n        _set_id(rt)       \n        let sedfs = _sedfs(this)\n        sedfs.forEach(\n            (nd,i)=> {\n                let depth = nd.$depth()\n                let indent = '    '.repeat(depth)\n                if(i === nd.$open_at)  {\n                    console.log(indent+'<'+nd._id+' : ' + nd.$guid +'>')\n                }\n                if(i === nd.$close_at)  {\n                    console.log(indent+'</'+nd._id+' : ' +nd.$guid +'>')\n                }                               \n            }\n        )\n    }\n    //\n    $disconn() {\n        return(_disconn(this))\n    }\n    $rm_fstch() {\n        let fstch = this._fstch\n        return(_disconn(fstch))\n    }\n    $rm_lstch() {\n        let lstch = _lstch(this)\n        return(_disconn(lstch))\n    }\n    $rm_which(index) {\n        let child = _which_child(index,this) \n        return(_disconn(child))\n    }\n    $rm_some_children(...indexes) {\n        let children = _some_children(this,...indexes)\n        return(children.map(child=>_disconn(child)))\n    }\n    $rm_all_children() {\n        let children = _children(this)\n        return(children.map(child=>_disconn(child)))\n    }\n    //\n    $dump() {\n        if(this.$is_root()) {\n            return(_dump(this))\n        } else {\n            console.log('only root !!!')\n        }\n    }\n    $dump2file(fn) {\n        if(this.$is_root()) {\n            let ndict = _dump(this)\n            ndutil.wjson(fn,ndict)\n        } else {\n            console.log('only root !!!')\n        }\n    }\n    //\n    $sdfs2mat() {\n        return(_sdfs2mat(_sdfs(this)))\n    }          \n}\n\n\n/**/\n\nfunction _set_id(nd) {\n    //root代表一棵树, 给每个节点加sdfs_seq\n    let tree = _sdfs(nd)\n    tree.forEach(\n        (nd,i) => {nd._id = i}\n    )\n    return(tree)\n}\n\n\nfunction _rtjson2rt(root) {\n    let rt = new Tree()\n    rt._id = root._id\n    rt.$guid = root._guid\n    return(rt)       \n}\n\nfunction _get_ancend_via_id(id,nd) {\n    while(nd._id !== id) {\n        nd=nd._parent\n    }\n    return(nd)\n}\n\nfunction fill_other_attrs_for_load(nd,d) {\n    let other_ks = get_non_struct_keys(d)\n    for(let k of other_ks) {\n        nd[k] = d[k]\n    }\n    return(nd)\n}\n\n\n\nfunction _load(ndict) {\n    //从一个json结构变成tree,返回root\n    let k = cmmn.dict_keys(ndict)[0]\n    let root = ndfunc.get_root(ndict[k],ndict)\n    let rt = _rtjson2rt(root)\n    rt = fill_other_attrs_for_load(rt,root)\n    let prnd = rt\n    let prnj = root\n    let nj = ndfunc.get_sdfs_next(prnj,ndict)\n    let nd;\n    while(nj!==null) {\n        if(prnj._fstch ===nj._id) {\n            nd = prnd.$prepend_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(prnj._rsib ===nj._id) {\n            nd = prnd.$add_rsib()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(nj._parent!==null && nj._parent!==undefined) {\n            //lstch,并且上一個節點是drmost-of-lsib\n            let pid = nj._parent\n            prnd = _get_ancend_via_id(pid,prnd)\n            nd = prnd.$append_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else if(nj._parent===undefined){\n            //非lstch,并且上一個節點是drmost-of-lsib\n            let pnj = ndfunc.get_parent(nj,ndict)\n            let pid = pnj._id\n            prnd = _get_ancend_via_id(pid,prnd)\n            nd = prnd.$append_child()\n            nd._id = nj._id\n            nd.$guid = nj._guid\n            nd = fill_other_attrs_for_load(nd,nj)\n            prnd = nd\n            prnj = nj\n            nj = ndfunc.get_sdfs_next(prnj,ndict)\n        } else {\n            console.log('Impossible',prnd,prnj,nj)\n        } \n    }\n    return(rt)\n}\n\nfunction _dictize_nd_property(nd,k) {\n    if(nd[k] === null) {\n        return(null)\n    } else if(nd[k] === undefined) {\n        return(undefined) \n    } else {\n        return(nd[k]._id)\n    }\n}\n\nfunction get_non_struct_keys(nd) {\n    let all_ks = cmmn.dict_keys(nd)\n    let other_ks = all_ks.filter(\n        r=>!(STRUCT_KEYS.includes(r))\n    )\n    return(other_ks)\n}\n\nfunction fill_other_attrs_for_dump(nd,d) {\n    let other_ks = get_non_struct_keys(nd)\n    for(let k of other_ks) {\n        d[k] = nd[k]\n    }\n    return(d)\n}\n\nfunction _dump(rt) {\n    //把一个nd结构变成json结构, 这个nd 相当于脱离了tree的一个deepcopy\n    let sdfs = _set_id(rt)\n    //let sdfs = rt.$sdfs()\n    let treeid = rt._id\n    let nodes_dict = {}\n    sdfs.forEach(\n        (nd,i) => {\n            let d = {}\n            d._tree = treeid\n            d._fstch = _dictize_nd_property(nd,'_fstch') \n            d._lsib = _dictize_nd_property(nd,'_lsib')\n            d._rsib = _dictize_nd_property(nd,'_rsib') \n            d._parent = _dictize_nd_property(nd,'_parent') \n            d._id = nd._id\n            d._guid = nd.$guid\n            //\n            d = fill_other_attrs_for_dump(nd,d)\n            //\n            nodes_dict[nd._id] = d\n        }\n    )\n    return(nodes_dict)\n}\n\n\nclass Tree extends _Node {\n    constructor() {\n        super();\n        //初始化为根节点,根节点代表一棵树\n        this._fstch = null\n        this._lsib = null\n        this._rsib = null\n        this._parent = null\n        this._tree = this\n    }\n    $is_parent_of(nd) {\n        let p = nd.$parent()\n        return(p===this)\n    }\n    $is_root_of(nd) {\n        let rt = nd.$root()\n        return(rt === this)\n    }\n    $is_descendant_of(nd) {\n        let deses = nd.$deses(false)\n        let index = deses.indexOf(this)\n        return(index >=0)\n    }\n    $is_inclusive_descendant_of(nd) {\n        let deses = nd.$deses(true)\n        let index = deses.indexOf(this)\n        return(index >=0)\n    }\n    $is_ancestor_of(nd) {\n        let ances = nd.$ances(false)\n        let index = ances.indexOf(this)\n        return(index >=0)         \n    }\n    $is_inclusive_ancestor_of(nd) {\n        let ances = nd.$ances(true)\n        let index = ances.indexOf(this)\n        return(index >=0) \n    }\n    $is_sibling_of(nd) {\n        let sibs = nd.$sibs(false)\n        let index = sibs.indexOf(this)\n        return(index >=0)\n    }\n    $is_inclusive_siblings_of(nd) {\n        let sibs = nd.$sibs(true)\n        let index = sibs.indexOf(this)\n        return(index >=0)\n    }\n    $is_preceding_of(nd) {\n        let sdfs = nd.$sdfs()\n        let ndindex = sdfs.indexOf(nd)\n        let this_index = sdfs.indexof(this)\n        return(this_index>=0 && this_index < ndindex)\n    }\n    $is_following_of(nd) {\n        let sdfs = nd.$sdfs()\n        let ndindex = sdfs.indexOf(nd)\n        let this_index = sdfs.indexof(this)\n        return(this_index > ndindex)\n    }\n    $is_first_child_of(nd) {\n        return(this === nd.$fstch())\n    }\n    $is_child_of(nd) {\n        let children = nd.$children()\n        let index = children.indexOf(this)\n        return(index>=0)\n    }\n    $is_last_child_of(nd) {\n        return(this === nd.$lstch())\n    }\n    $is_previous_sibling_of(nd) {\n        return(this === nd.$lsib())\n    }\n    $is_next_sibling_of(nd) {\n        return(this === nd.$rsib())\n    }\n    $index() {\n        return(this.$sibseq())    \n    } \n    $sdfs_index() {\n        let sdfs = this.$sdfs()\n        return(sdfs.indexOf(this))\n    }\n}\n\nfunction load(from) {\n    if(typeof(from) === 'string') {\n        let ndict = ndutil.rjson(from)\n        return(_load(ndict))\n    } else if(typeof(from) === 'object') {\n        let ndict = from\n        return(_load(ndict))\n    } else {\n        return(new Tree())\n    }\n}\n\nfunction clone(nd) {\n    let ndcit = nd.$dump()\n    return(load(ndict))\n}\n\nfunction _ele_struct_eq(ele0,ele1) {\n    return(\n        ele0._pbreadth === ele1._pbreadth &&\n        ele0._breadth === ele1._breadth &&\n        ele0._depth === ele1._depth\n    )\n}\n\nfunction struct_eq(tree0,tree1) {\n    let m0 = tree0.$sdfs2mat()\n    let m1 = tree1.$sdfs2mat()\n    let flat0 = Array.prototype.concat(...m0)\n    let flat1 = Array.prototype.concat(...m1)\n    if(flat0.length !== flat1.length) {\n        return(false)\n    } else {\n        for(let i=0;i<flat0.length;i++) {\n            if(_ele_struct_eq(flat0[i],flat1[i])) { } else {return(false)}\n        }\n    }\n    return(true)\n}\n\nmodule.exports = {\n    Node:_Node,\n    Tree:Tree,\n    Root:Tree,\n    load:load,\n    clone:clone,\n    struct_eq:struct_eq,\n}\n","//https://dom.spec.whatwg.org/#callbackdef-eventlistener\n\nclass EventListenerOptions {\n    constructor() {\n        this.capture = false    \n    }\n}\n\nclass AddEventListenerOptions extends EventListenerOptions {\n    constructor() {\n        this.passive = false\n        this.once = false\n    }\n}\n\nclass EventListener {\n    handleEvent(event) {\n    }\n}\n\n\nclass EventTarget {\n    constructor(){\n    }\n    addEventListener(type,callback,options={}) {\n    }\n    removeEventListener(type,callback,options={}) {\n    }\n    dispatchEvent(event) {\n    }\n}\n\n\n\nmodule.exports = {\n    EventTarget\n}\n","const ndfunc = require('./ndfunc.js')\nconst cmmn = require('./cmmn.js')\n\nconst dflt_sdfs_show_connd = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'└── ',\n    'ws':'    '\n}\n\nconst dflt_edfs_show_connd = {\n    't':'├── ',\n    'v':'│   ',\n    'l':'┌── ',\n    'ws':'    '\n}\n\n\n\nfunction dflt_calc_conn_map_func(conn) {\n    let rslt;\n    if(conn==='t') {\n        rslt = 'v'\n    } else if(conn === 'v') {\n        rslt = 'v'\n    } else {\n        rslt = 'ws'\n    }\n    return(rslt)\n}\n\n\n\nfunction conns2repr(conns,show_connd) {\n    conns = conns.map(conn=>show_connd[conn])\n    return(conns.join(''))\n}\n\n\nfunction clear_ui(nodes) {\n    for(let id in nodes) {\n        delete nodes[id]._ui\n    }\n}\n\n//sdfs\n\nfunction dflt_sdfs_calc_conns(nd,nodes) {\n    nd._ui = {}\n    if(ndfunc.is_root(nd)){\n        //跟节点没有前导ui 符号\n        nd._ui.conns = []\n        nd._ui.display = true\n    } else {\n        let parent = ndfunc.get_parent(nd,nodes)\n        //获取父节点的前导ui 符号序列数组\n        let pconns = parent._ui.conns\n        let conns = pconns.map(conn=>dflt_calc_conn_map_func(conn))\n        let cond = ndfunc.is_lstch(nd)\n        if(cond) {\n            conns.push('l')\n        } else {\n            conns.push('t')\n        }\n        nd._ui.conns = conns\n        nd._ui.display = true\n    }\n    return(nd)\n}\n\n\n\nfunction get_sdfs_repr_arr(nd,nodes,f){\n    let depth = ndfunc.get_depth(nd,nodes)\n    let sdfs = ndfunc.get_deses(nd,nodes,true)\n    sdfs = sdfs.map(nd=>dflt_sdfs_calc_conns(nd,nodes))\n    let conns_array = sdfs.map(nd=>nd._ui.conns)\n    conns_array = conns_array.map(conns=>conns.slice(depth))\n    conns_array = conns_array.map(conns=>conns2repr(conns,dflt_sdfs_show_connd))\n    let arr = conns_array.map((conns,i)=>(conns+'['+sdfs[i]._id+']'+' : '+sdfs[i]._guid))\n    arr = arr.filter((r,i)=>(sdfs[i]._ui.display === true))\n    return(arr)\n}\n\n\nfunction dflt_sdfs_show_callback() {\n}\n\n\nfunction sdfs_show_all(nd,nodes,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction sdfs_show_root_tree(nodes,f=dflt_sdfs_show_callback){\n    let k = cmmn.dict_keys(nodes)[0]\n    let nd = ndfunc.get_root(nodes[k],nodes)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n\nfunction sdfs_show_from(nd,nodes,from,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction sdfs_show_to(nd,nodes,to,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(0,to)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\nfunction sdfs_show_from_to(nd,nodes,from,to,f=dflt_sdfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_sdfs_repr_arr(root,nodes,f)\n    let arr = get_sdfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(from,to)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n//\n\nfunction dflt_edfs_show_callback() {\n}\n\nfunction dflt_edfs_calc_conns(nd,nodes) {\n    nd._ui = {}\n    if(ndfunc.is_root(nd)){\n        //跟节点没有前导ui 符号\n        nd._ui.conns = []\n    } else {\n        let parent = ndfunc.get_parent(nd,nodes)\n        //获取父节点的前导ui 符号序列数组\n        let pconns = parent._ui.conns\n        let conns = pconns.map(conn=>dflt_calc_conn_map_func(conn))\n        let cond = ndfunc.is_fstch(nd)\n        if(cond) {\n            conns.push('l')\n        } else {\n            conns.push('t')\n        }\n        nd._ui.conns = conns\n    }\n    return(nd)\n}\n\n\nfunction get_edfs_repr_arr(nd,nodes,f){\n    let depth = ndfunc.get_depth(nd,nodes)\n    let edfs = ndfunc.get_edfs(nd,nodes)\n    edfs.reverse()\n    edfs = edfs.map(nd=>dflt_edfs_calc_conns(nd,nodes))\n    edfs.reverse()\n    let deses = ndfunc.get_deses(nd,nodes,true)\n    let ids = deses.map(r=>r._id)\n    edfs = edfs.filter(r=>ids.includes(r._id))\n    let conns_array = edfs.map(nd=>nd._ui.conns)\n    conns_array = conns_array.map(conns=>conns.slice(depth,conns.length))\n    conns_array = conns_array.map(conns=>conns2repr(conns,dflt_edfs_show_connd))\n    let arr = conns_array.map((conns,i)=>(conns+edfs[i]._id))\n    return(arr)\n}\n\n\nfunction edfs_show_all(nd,nodes,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(root,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_root_tree(nodes,f=dflt_edfs_show_callback){\n    let k = cmmn.dict_keys(nodes)[0]\n    let nd = ndfunc.get_root(nodes[k],nodes)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_from(nd,nodes,from,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(0,arr.length-from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\nfunction edfs_show_to(nd,nodes,to,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(arr.length-to,arr.length)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\nfunction edfs_show_from_to(nd,nodes,from,to,f=dflt_edfs_show_callback){\n    let root = ndfunc.get_root(nd,nodes)\n    get_edfs_repr_arr(nd,nodes,f)\n    let arr = get_edfs_repr_arr(nd,nodes,f)\n    arr = arr.slice(arr.length-to,arr.length-from)\n    let repr = arr.join('\\n')\n    console.log(repr)\n    clear_ui(nodes)\n}\n\n\n//sedfs\n\nconst dflt_sedfs_show_connd = {\n    indent:'    ',\n    stag_prefix:'<',\n    stag_suffix:'>',\n    etag_prefix:'</',\n    etag_suffix:'>',\n}\n\n\nfunction gen_tag(tag,prefix,suffix) {\n    return(prefix+tag+suffix)\n}\n\nfunction sedfs_show_all(nd,nodes,show_connd=dflt_sedfs_show_connd) {\n    let sedfs = ndfunc.get_sedfs(nd,nodes,true)\n    let depths = sedfs.map(nd=>ndfunc.get_depth(nd,nodes))\n    let depth = ndfunc.get_depth(nd,nodes)\n    let indents = depths.map(r=>show_connd.indent.repeat(r-depth)) \n    let tags = sedfs.map(\n        nd=>{\n            if(nd._$visited === false) {\n                return(gen_tag(nd._id,show_connd.stag_prefix,show_connd.stag_suffix))\n            } else {\n                return(gen_tag(nd._id,show_connd.etag_prefix,show_connd.etag_suffix))\n            }\n        }\n    )\n    let lines = tags.map((tag,i)=>(indents[i]+tag)) \n    let repr = lines.join('\\n')\n    console.log(repr)\n}\n\nfunction sdfs_expand(nd,nodes,f=dflt_sdfs_show_callback) {\n    let sdfs = ndfunc.get_deses(nd,nodes,false)\n    sdfs.forEach(nd=>{nd._ui.display = true})\n    return(nodes)\n}\n\nfunction sdfs_foldup(nd,nodes,f=dflt_sdfs_show_callback) {\n    let sdfs = ndfunc.get_deses(nd,nodes,false)\n    sdfs.forEach(nd=>{nd._ui.display = false})\n    return(nodes)\n}\n\n\nmodule.exports = {\n    dflt_calc_conn_map_func,\n    conns2repr,\n    clear_ui,\n    //sdfs\n    dflt_sdfs_show_connd,\n    dflt_sdfs_calc_conns,\n    get_sdfs_repr_arr,\n    sdfs_show_all,\n    sdfs_show_root_tree,\n    sdfs_show_from,\n    sdfs_show_to,\n    sdfs_show_from_to,\n    sdfs_expand,\n    sdfs_foldup,\n    //edfs\n    dflt_edfs_show_connd,\n    dflt_edfs_calc_conns,\n    get_edfs_repr_arr,\n    edfs_show_all,\n    edfs_show_root_tree,\n    edfs_show_from,\n    edfs_show_to,\n    edfs_show_from_to,\n    //sedfs\n    dflt_sedfs_show_connd,\n    gen_tag,\n    sedfs_show_all,           \n}\n\n"],"sourceRoot":""}